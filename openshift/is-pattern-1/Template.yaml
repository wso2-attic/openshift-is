# Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Template
metadata:
  name: wso2is
  annotations:
    openshift.io/display-name: WSO2 Identity Server
    description: >-
      WSO2 Identity Server is an API-driven open source IAM product designed
      to help you build effective CIAM solutions. It is based on open standards
      such as SAML, OAuth and OIDC.

      This template create WSO2 Identity Server v5.9.0 cluster. Parameters can
      be used to change the number of nodes and other setting releted to deployment.
    openshift.io/documentation-url: https://is.docs.wso2.com/en/latest/
    openshift.io/provider-display-name: WSO2, Inc.
    openshift.io/support-url: https://wso2.com/
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: ${NAME}-rdbms-image-stream
  spec:
    tags:
      - name: latest
        from:
          kind: DockerImage
          name: 'mysql:5.7'

- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: ${NAME}-init-image-stream
  spec:
    tags:
      - name: latest
        from:
          kind: DockerImage
          name: 'busybox:1.31'

- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: ${WSO2_IS_SERVICE_ACCOUNT_NAME}

- apiVersion: security.openshift.io/v1
  kind: SecurityContextConstraints
  metadata:
    name: ${NAME}-scc-account-privileged
  runAsUser:
    type: RunAsAny
  seLinuxContext:
    type: RunAsAny
  users:
  - system:serviceaccount:${OPENSHIFT_PROJECT_NAME}:${WSO2_IS_SERVICE_ACCOUNT_NAME}
  volumes:
  - '*'

- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    name: endpoints-reader-role
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - get
    - list

- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: endpoints-reader-role-wso2-binding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: endpoints-reader-role
  subjects:
  - kind: ServiceAccount
    name: ${WSO2_IS_SERVICE_ACCOUNT_NAME}
    namespace: ${OPENSHIFT_PROJECT_NAME}

- apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: ${NAME}-rdbms-service-mysql
    labels:
      volumeName: ${NAME}-rdbms-service-mysql
  spec:
    accessModes:
    - ReadWriteOnce
    volumeMode: Filesystem
    capacity:
      storage: 8Gi
    nfs:
      server: ${NFS_SERVER_IP}
      path: ${NFS_SHARE_DATABASE}

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${NAME}-rdbms-service-mysql
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 8Gi
    volumeMode: Filesystem
    selector:
      matchLabels:
        volumeName: ${NAME}-rdbms-service-mysql

- apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: ${NAME}-userstore
    labels:
      volumeName: ${NAME}-userstore
  spec:
    accessModes:
    - ReadWriteOnce
    volumeMode: Filesystem
    capacity:
      storage: 2Gi
    nfs:
      server: ${NFS_SERVER_IP}
      path: ${NFS_SHARE_USERSTORE}

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${NAME}-userstore
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 2Gi
    volumeMode: Filesystem
    selector:
      matchLabels:
        volumeName: ${NAME}-userstore

- apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: ${NAME}-tenants
    labels:
      volumeName: ${NAME}-tenants
  spec:
    accessModes:
    - ReadWriteOnce
    volumeMode: Filesystem
    capacity:
      storage: 3Gi
    nfs:
      server: ${NFS_SERVER_IP}
      path: ${NFS_SHARE_TENANT}

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${NAME}-tenants
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 3Gi
    volumeMode: Filesystem
    selector:
      matchLabels:
        volumeName: ${NAME}-tenants

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: identity-server-conf
  data:
    deployment.toml: >-
      # Deployment config for identity server deployment

      [server]

      hostname = "$env{HOST_NAME}"

      node_ip = "$env{NODE_IP}"

      # base_path = "https://$ref{server.hostname}:${carbon.management.port}"


      [super_admin]

      username = "admin"

      password = "admin"

      create_admin_account = true


      [user_store]

      type = "database"


      [database.user]

      url = "jdbc:mysql://wso2is-rdbms-service-mysql:3306/WSO2IS_SHARED_DB?autoReconnect=true&amp;useSSL=false"

      username = "wso2carbon"

      password = "wso2carbon"

      driver = "com.mysql.jdbc.Driver"

      [database.user.pool_options]

      validationQuery = "SELECT 1"


      [transport.https.properties]

      proxyPort="443"


      [database.identity_db]

      url = "jdbc:mysql://wso2is-rdbms-service-mysql:3306/WSO2IS_IDENTITY_DB?autoReconnect=true&amp;useSSL=false"

      username = "wso2carbon"

      password = "wso2carbon"

      driver = "com.mysql.jdbc.Driver"

      [database.identity_db.pool_options]

      validationQuery = "SELECT 1"


      [database.shared_db]

      url = "jdbc:mysql://wso2is-rdbms-service-mysql:3306/WSO2IS_SHARED_DB?autoReconnect=true&amp;useSSL=false"

      username = "wso2carbon"

      password = "wso2carbon"

      driver = "com.mysql.jdbc.Driver"

      [database.shared_db.pool_options]

      validationQuery = "SELECT 1"


      [database.bps_database]

      url = "jdbc:mysql://wso2is-rdbms-service-mysql:3306/WSO2IS_BPS_DB?autoReconnect=true&amp;useSSL=false"

      username = "wso2carbon"

      password = "wso2carbon"

      driver = "com.mysql.jdbc.Driver"

      [database.bps_database.pool_options]

      validationQuery = "SELECT 1"


      [[datasource]]

      id = "WSO2ConsentDS"

      url = "jdbc:mysql://wso2is-rdbms-service-mysql:3306/WSO2IS_CONSENT_DB?autoReconnect=true&amp;useSSL=false"

      username = "wso2carbon"

      password = "wso2carbon"

      driver = "com.mysql.jdbc.Driver"

      pool_options.validationQuery="SELECT 1"

      pool_options.maxActive=50

      pool_options.maxWait = 60000 # wait in milliseconds

      pool_options.testOnBorrow = true

      pool_options.jmxEnabled = false


      [authentication.consent]

      data_source="jdbc/WSO2ConsentDS"


      [keystore.primary]

      name = "wso2carbon.jks"

      password = "wso2carbon"


      [hazelcast]

      "hazelcast.shutdownhook.enabled" = "false"

      "hazelcast.logging.type"= "log4j"


      [clustering]

      membership_scheme="kubernetes"

      domain="wso2.carbon.domain"

      properties.membershipSchemeClassName="org.wso2.carbon.membership.scheme.kubernetes.KubernetesMembershipScheme"

      properties.KUBERNETES_NAMESPACE="${OPENSHIFT_PROJECT_NAME}"

      properties.KUBERNETES_SERVICES="wso2is-pattern-ha-service"

      properties.KUBERNETES_MASTER_SKIP_SSL_VERIFICATION="true"

      properties.USE_DNS="false"

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${NAME}-rdbms-service-mysql-configuration
  data:
    mysql.cnf: |-
      [mysqld]
      max_connections = 10000

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${NAME}-rdbms-service-mysql-initialization
  data:
    init.sql: "DROP DATABASE IF EXISTS WSO2IS_SHARED_DB;\nDROP DATABASE IF EXISTS WSO2IS_IDENTITY_DB;\nDROP DATABASE IF EXISTS WSO2IS_BPS_DB;\nDROP DATABASE IF EXISTS WSO2IS_CONSENT_DB;\nDROP DATABASE IF EXISTS IS_ANALYTICS_DB;\nDROP DATABASE IF EXISTS WSO2_CLUSTER_DB;\nDROP DATABASE IF EXISTS WSO2_PERSISTENCE_DB;\nCREATE DATABASE WSO2IS_SHARED_DB;\nCREATE DATABASE WSO2IS_IDENTITY_DB;\nCREATE DATABASE WSO2IS_BPS_DB;\nCREATE DATABASE WSO2IS_CONSENT_DB;\nCREATE DATABASE IS_ANALYTICS_DB;\nCREATE DATABASE WSO2_CLUSTER_DB;\nCREATE DATABASE WSO2_PERSISTENCE_DB;\nGRANT ALL ON WSO2IS_SHARED_DB.* TO 'wso2carbon'@'%' IDENTIFIED BY 'wso2carbon';\nGRANT ALL ON WSO2IS_IDENTITY_DB.* TO 'wso2carbon'@'%' IDENTIFIED BY 'wso2carbon';\nGRANT ALL ON WSO2IS_BPS_DB.* TO 'wso2carbon'@'%' IDENTIFIED BY 'wso2carbon';\nGRANT ALL ON WSO2IS_CONSENT_DB.* TO 'wso2carbon'@'%' IDENTIFIED BY 'wso2carbon';\nGRANT ALL ON IS_ANALYTICS_DB.* TO 'wso2carbon'@'%' IDENTIFIED BY 'wso2carbon';\nGRANT ALL ON WSO2_CLUSTER_DB.* TO 'wso2carbon'@'%' IDENTIFIED BY 'wso2carbon';\nGRANT ALL ON WSO2_PERSISTENCE_DB.* TO 'wso2carbon'@'%' IDENTIFIED BY 'wso2carbon';\nUSE WSO2IS_SHARED_DB;\nCREATE TABLE IF NOT EXISTS REG_CLUSTER_LOCK (\n             REG_LOCK_NAME VARCHAR (20),\n             REG_LOCK_STATUS VARCHAR (20),\n             REG_LOCKED_TIME TIMESTAMP,\n             REG_TENANT_ID INTEGER DEFAULT 0,\n             PRIMARY KEY (REG_LOCK_NAME)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS REG_LOG (\n             REG_LOG_ID INTEGER AUTO_INCREMENT,\n             REG_PATH VARCHAR (750),\n             REG_USER_ID VARCHAR (31) NOT NULL,\n             REG_LOGGED_TIME TIMESTAMP NOT NULL,\n             REG_ACTION INTEGER NOT NULL,\n             REG_ACTION_DATA VARCHAR (500),\n             REG_TENANT_ID INTEGER DEFAULT 0,\n             PRIMARY KEY (REG_LOG_ID, REG_TENANT_ID)\n)ENGINE INNODB;\nCREATE INDEX REG_LOG_IND_BY_REGLOG USING HASH ON REG_LOG(REG_LOGGED_TIME, REG_TENANT_ID);\n-- The REG_PATH_VALUE should be less than 767 bytes, and hence was fixed at 750.\n-- See CARBON-5917.\nCREATE TABLE IF NOT EXISTS REG_PATH(\n             REG_PATH_ID INTEGER NOT NULL AUTO_INCREMENT,\n             REG_PATH_VALUE VARCHAR(750) NOT NULL,\n             REG_PATH_PARENT_ID INTEGER,\n             REG_TENANT_ID INTEGER DEFAULT 0,\n             CONSTRAINT PK_REG_PATH PRIMARY KEY(REG_PATH_ID, REG_TENANT_ID),\n             CONSTRAINT UNIQUE_REG_PATH_TENANT_ID UNIQUE (REG_PATH_VALUE,REG_TENANT_ID)\n)ENGINE INNODB;\nCREATE INDEX REG_PATH_IND_BY_PATH_VALUE USING HASH ON REG_PATH(REG_PATH_VALUE, REG_TENANT_ID);\nCREATE INDEX REG_PATH_IND_BY_PATH_PARENT_ID USING HASH ON REG_PATH(REG_PATH_PARENT_ID, REG_TENANT_ID);\nCREATE TABLE IF NOT EXISTS REG_CONTENT (\n             REG_CONTENT_ID INTEGER NOT NULL AUTO_INCREMENT,\n             REG_CONTENT_DATA LONGBLOB,\n             REG_TENANT_ID INTEGER DEFAULT 0,\n             CONSTRAINT PK_REG_CONTENT PRIMARY KEY(REG_CONTENT_ID, REG_TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS REG_CONTENT_HISTORY (\n             REG_CONTENT_ID INTEGER NOT NULL,\n             REG_CONTENT_DATA LONGBLOB,\n             REG_DELETED   SMALLINT,\n             REG_TENANT_ID INTEGER DEFAULT 0,\n             CONSTRAINT PK_REG_CONTENT_HISTORY PRIMARY KEY(REG_CONTENT_ID, REG_TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS REG_RESOURCE (\n            REG_PATH_ID         INTEGER NOT NULL,\n            REG_NAME            VARCHAR(256),\n            REG_VERSION         INTEGER NOT NULL AUTO_INCREMENT,\n            REG_MEDIA_TYPE      VARCHAR(500),\n            REG_CREATOR         VARCHAR(31) NOT NULL,\n            REG_CREATED_TIME    TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            REG_LAST_UPDATOR    VARCHAR(31),\n            REG_LAST_UPDATED_TIME    TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            REG_DESCRIPTION     VARCHAR(1000),\n            REG_CONTENT_ID      INTEGER,\n            REG_TENANT_ID INTEGER DEFAULT 0,\n            REG_UUID VARCHAR(100) NOT NULL,\n            CONSTRAINT PK_REG_RESOURCE PRIMARY KEY(REG_VERSION, REG_TENANT_ID)\n)ENGINE INNODB;\nALTER TABLE REG_RESOURCE ADD CONSTRAINT REG_RESOURCE_FK_BY_PATH_ID FOREIGN KEY (REG_PATH_ID, REG_TENANT_ID) REFERENCES REG_PATH (REG_PATH_ID, REG_TENANT_ID);\nALTER TABLE REG_RESOURCE ADD CONSTRAINT REG_RESOURCE_FK_BY_CONTENT_ID FOREIGN KEY (REG_CONTENT_ID, REG_TENANT_ID) REFERENCES REG_CONTENT (REG_CONTENT_ID, REG_TENANT_ID);\nCREATE INDEX REG_RESOURCE_IND_BY_NAME USING HASH ON REG_RESOURCE(REG_NAME, REG_TENANT_ID);\nCREATE INDEX REG_RESOURCE_IND_BY_PATH_ID_NAME USING HASH ON REG_RESOURCE(REG_PATH_ID, REG_NAME, REG_TENANT_ID);\nCREATE INDEX REG_RESOURCE_IND_BY_UUID USING HASH ON REG_RESOURCE(REG_UUID);\nCREATE INDEX REG_RESOURCE_IND_BY_TENAN USING HASH ON REG_RESOURCE(REG_TENANT_ID, REG_UUID);\nCREATE INDEX REG_RESOURCE_IND_BY_TYPE USING HASH ON REG_RESOURCE(REG_TENANT_ID, REG_MEDIA_TYPE);\nCREATE TABLE IF NOT EXISTS REG_RESOURCE_HISTORY (\n            REG_PATH_ID         INTEGER NOT NULL,\n            REG_NAME            VARCHAR(256),\n            REG_VERSION         INTEGER NOT NULL,\n            REG_MEDIA_TYPE      VARCHAR(500),\n            REG_CREATOR         VARCHAR(31) NOT NULL,\n            REG_CREATED_TIME    TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            REG_LAST_UPDATOR    VARCHAR(31),\n            REG_LAST_UPDATED_TIME    TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            REG_DESCRIPTION     VARCHAR(1000),\n            REG_CONTENT_ID      INTEGER,\n            REG_DELETED         SMALLINT,\n            REG_TENANT_ID INTEGER DEFAULT 0,\n            REG_UUID VARCHAR(100) NOT NULL,\n            CONSTRAINT PK_REG_RESOURCE_HISTORY PRIMARY KEY(REG_VERSION, REG_TENANT_ID)\n)ENGINE INNODB;\nALTER TABLE REG_RESOURCE_HISTORY ADD CONSTRAINT REG_RESOURCE_HIST_FK_BY_PATHID FOREIGN KEY (REG_PATH_ID, REG_TENANT_ID) REFERENCES REG_PATH (REG_PATH_ID, REG_TENANT_ID);\nALTER TABLE REG_RESOURCE_HISTORY ADD CONSTRAINT REG_RESOURCE_HIST_FK_BY_CONTENT_ID FOREIGN KEY (REG_CONTENT_ID, REG_TENANT_ID) REFERENCES REG_CONTENT_HISTORY (REG_CONTENT_ID, REG_TENANT_ID);\nCREATE INDEX REG_RESOURCE_HISTORY_IND_BY_NAME USING HASH ON REG_RESOURCE_HISTORY(REG_NAME, REG_TENANT_ID);\nCREATE INDEX REG_RESOURCE_HISTORY_IND_BY_PATH_ID_NAME USING HASH ON REG_RESOURCE(REG_PATH_ID, REG_NAME, REG_TENANT_ID);\nCREATE TABLE IF NOT EXISTS REG_COMMENT (\n            REG_ID        INTEGER NOT NULL AUTO_INCREMENT,\n            REG_COMMENT_TEXT      VARCHAR(500) NOT NULL,\n            REG_USER_ID           VARCHAR(31) NOT NULL,\n            REG_COMMENTED_TIME    TIMESTAMP NOT NULL,\n            REG_TENANT_ID INTEGER DEFAULT 0,\n            CONSTRAINT PK_REG_COMMENT PRIMARY KEY(REG_ID, REG_TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS REG_RESOURCE_COMMENT (\n            REG_COMMENT_ID          INTEGER NOT NULL,\n            REG_VERSION             INTEGER,\n            REG_PATH_ID             INTEGER,\n            REG_RESOURCE_NAME       VARCHAR(256),\n            REG_TENANT_ID INTEGER DEFAULT 0\n)ENGINE INNODB;\nALTER TABLE REG_RESOURCE_COMMENT ADD CONSTRAINT REG_RESOURCE_COMMENT_FK_BY_PATH_ID FOREIGN KEY (REG_PATH_ID, REG_TENANT_ID) REFERENCES REG_PATH (REG_PATH_ID, REG_TENANT_ID);\nALTER TABLE REG_RESOURCE_COMMENT ADD CONSTRAINT REG_RESOURCE_COMMENT_FK_BY_COMMENT_ID FOREIGN KEY (REG_COMMENT_ID, REG_TENANT_ID) REFERENCES REG_COMMENT (REG_ID, REG_TENANT_ID);\nCREATE INDEX REG_RESOURCE_COMMENT_IND_BY_PATH_ID_AND_RESOURCE_NAME USING HASH ON REG_RESOURCE_COMMENT(REG_PATH_ID, REG_RESOURCE_NAME, REG_TENANT_ID);\nCREATE INDEX REG_RESOURCE_COMMENT_IND_BY_VERSION USING HASH ON REG_RESOURCE_COMMENT(REG_VERSION, REG_TENANT_ID);\nCREATE TABLE IF NOT EXISTS REG_RATING (\n            REG_ID     INTEGER NOT NULL AUTO_INCREMENT,\n            REG_RATING        INTEGER NOT NULL,\n            REG_USER_ID       VARCHAR(31) NOT NULL,\n            REG_RATED_TIME    TIMESTAMP NOT NULL,\n            REG_TENANT_ID INTEGER DEFAULT 0,\n            CONSTRAINT PK_REG_RATING PRIMARY KEY(REG_ID, REG_TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS REG_RESOURCE_RATING (\n            REG_RATING_ID           INTEGER NOT NULL,\n            REG_VERSION             INTEGER,\n            REG_PATH_ID             INTEGER,\n            REG_RESOURCE_NAME       VARCHAR(256),\n            REG_TENANT_ID INTEGER DEFAULT 0\n)ENGINE INNODB;\nALTER TABLE REG_RESOURCE_RATING ADD CONSTRAINT REG_RESOURCE_RATING_FK_BY_PATH_ID FOREIGN KEY (REG_PATH_ID, REG_TENANT_ID) REFERENCES REG_PATH (REG_PATH_ID, REG_TENANT_ID);\nALTER TABLE REG_RESOURCE_RATING ADD CONSTRAINT REG_RESOURCE_RATING_FK_BY_RATING_ID FOREIGN KEY (REG_RATING_ID, REG_TENANT_ID) REFERENCES REG_RATING (REG_ID, REG_TENANT_ID);\nCREATE INDEX REG_RESOURCE_RATING_IND_BY_PATH_ID_AND_RESOURCE_NAME USING HASH ON REG_RESOURCE_RATING(REG_PATH_ID, REG_RESOURCE_NAME, REG_TENANT_ID);\nCREATE INDEX REG_RESOURCE_RATING_IND_BY_VERSION USING HASH ON REG_RESOURCE_RATING(REG_VERSION, REG_TENANT_ID);\nCREATE TABLE IF NOT EXISTS REG_TAG (\n            REG_ID         INTEGER NOT NULL AUTO_INCREMENT,\n            REG_TAG_NAME       VARCHAR(500) NOT NULL,\n            REG_USER_ID        VARCHAR(31) NOT NULL,\n            REG_TAGGED_TIME    TIMESTAMP NOT NULL,\n            REG_TENANT_ID INTEGER DEFAULT 0,\n            CONSTRAINT PK_REG_TAG PRIMARY KEY(REG_ID, REG_TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS REG_RESOURCE_TAG (\n            REG_TAG_ID              INTEGER NOT NULL,\n            REG_VERSION             INTEGER,\n            REG_PATH_ID             INTEGER,\n            REG_RESOURCE_NAME       VARCHAR(256),\n            REG_TENANT_ID INTEGER DEFAULT 0\n)ENGINE INNODB;\nALTER TABLE REG_RESOURCE_TAG ADD CONSTRAINT REG_RESOURCE_TAG_FK_BY_PATH_ID FOREIGN KEY (REG_PATH_ID, REG_TENANT_ID) REFERENCES REG_PATH (REG_PATH_ID, REG_TENANT_ID);\nALTER TABLE REG_RESOURCE_TAG ADD CONSTRAINT REG_RESOURCE_TAG_FK_BY_TAG_ID FOREIGN KEY (REG_TAG_ID, REG_TENANT_ID) REFERENCES REG_TAG (REG_ID, REG_TENANT_ID);\nCREATE INDEX REG_RESOURCE_TAG_IND_BY_PATH_ID_AND_RESOURCE_NAME USING HASH ON REG_RESOURCE_TAG(REG_PATH_ID, REG_RESOURCE_NAME, REG_TENANT_ID);\nCREATE INDEX REG_RESOURCE_TAG_IND_BY_VERSION USING HASH ON REG_RESOURCE_TAG(REG_VERSION, REG_TENANT_ID);\nCREATE TABLE IF NOT EXISTS REG_PROPERTY (\n            REG_ID         INTEGER NOT NULL AUTO_INCREMENT,\n            REG_NAME       VARCHAR(100) NOT NULL,\n            REG_VALUE        VARCHAR(1000),\n            REG_TENANT_ID INTEGER DEFAULT 0,\n            CONSTRAINT PK_REG_PROPERTY PRIMARY KEY(REG_ID, REG_TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS REG_RESOURCE_PROPERTY (\n            REG_PROPERTY_ID         INTEGER NOT NULL,\n            REG_VERSION             INTEGER,\n            REG_PATH_ID             INTEGER,\n            REG_RESOURCE_NAME       VARCHAR(256),\n            REG_TENANT_ID INTEGER DEFAULT 0\n)ENGINE INNODB;\nALTER TABLE REG_RESOURCE_PROPERTY ADD CONSTRAINT REG_RESOURCE_PROPERTY_FK_BY_PATH_ID FOREIGN KEY (REG_PATH_ID, REG_TENANT_ID) REFERENCES REG_PATH (REG_PATH_ID, REG_TENANT_ID);\nALTER TABLE REG_RESOURCE_PROPERTY ADD CONSTRAINT REG_RESOURCE_PROPERTY_FK_BY_TAG_ID FOREIGN KEY (REG_PROPERTY_ID, REG_TENANT_ID) REFERENCES REG_PROPERTY (REG_ID, REG_TENANT_ID);\nCREATE INDEX REG_RESOURCE_PROPERTY_IND_BY_PATH_ID_AND_RESOURCE_NAME USING HASH ON REG_RESOURCE_PROPERTY(REG_PATH_ID, REG_RESOURCE_NAME, REG_TENANT_ID);\nCREATE INDEX REG_RESOURCE_PROPERTY_IND_BY_VERSION USING HASH ON REG_RESOURCE_PROPERTY(REG_VERSION, REG_TENANT_ID);\n-- CREATE TABLE IF NOT EXISTS REG_ASSOCIATIONS (\n-- SRC_PATH_ID     INTEGER,\n-- SRC_RESOURCE_NAME    VARCHAR(256),\n-- SRC_VERSION     INTEGER,\n-- TGT_PATH_ID     INTEGER,\n-- TGT_RESOURCE_NAME    VARCHAR(256),\n-- TGT_VERSION     INTEGER\n-- )ENGINE INNODB;\n--\n-- ALTER TABLE REG_ASSOCIATIONS ADD CONSTRAINT REG_ASSOCIATIONS_FK_BY_SRC_PATH_ID FOREIGN KEY (SRC_PATH_ID) REFERENCES REG_PATH (PATH_ID);\n-- ALTER TABLE REG_ASSOCIATIONS ADD CONSTRAINT REG_ASSOCIATIONS_FK_BY_TGT_PATH_ID FOREIGN KEY (TGT_PATH_ID) REFERENCES REG_PATH (PATH_ID);\n-- CREATE INDEX REG_ASSOCIATIONS_IND_BY_SRC_VERSION ON REG_ASSOCIATIONS(SRC_VERSION);\n-- CREATE INDEX REG_ASSOCIATIONS_IND_BY_TGT_VERSION ON REG_ASSOCIATIONS(TGT_VERSION);\n-- CREATE INDEX REG_ASSOCIATIONS_IND_BY_SRC_RESOURCE_NAME ON REG_ASSOCIATIONS(SRC_RESOURCE_NAME);\n-- CREATE INDEX REG_ASSOCIATIONS_IND_BY_TGT_RESOURCE_NAME ON REG_ASSOCIATIONS(TGT_RESOURCE_NAME);\nCREATE TABLE IF NOT EXISTS REG_ASSOCIATION (\n            REG_ASSOCIATION_ID INTEGER AUTO_INCREMENT,\n            REG_SOURCEPATH VARCHAR (750) NOT NULL,\n            REG_TARGETPATH VARCHAR (750) NOT NULL,\n            REG_ASSOCIATION_TYPE VARCHAR (2000) NOT NULL,\n            REG_TENANT_ID INTEGER DEFAULT 0,\n            PRIMARY KEY (REG_ASSOCIATION_ID, REG_TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS REG_SNAPSHOT (\n            REG_SNAPSHOT_ID     INTEGER NOT NULL AUTO_INCREMENT,\n            REG_PATH_ID            INTEGER NOT NULL,\n            REG_RESOURCE_NAME      VARCHAR(255),\n            REG_RESOURCE_VIDS     LONGBLOB NOT NULL,\n            REG_TENANT_ID INTEGER DEFAULT 0,\n            CONSTRAINT PK_REG_SNAPSHOT PRIMARY KEY(REG_SNAPSHOT_ID, REG_TENANT_ID)\n)ENGINE INNODB;\nCREATE INDEX REG_SNAPSHOT_IND_BY_PATH_ID_AND_RESOURCE_NAME USING HASH ON REG_SNAPSHOT(REG_PATH_ID, REG_RESOURCE_NAME, REG_TENANT_ID);\nALTER TABLE REG_SNAPSHOT ADD CONSTRAINT REG_SNAPSHOT_FK_BY_PATH_ID FOREIGN KEY (REG_PATH_ID, REG_TENANT_ID) REFERENCES REG_PATH (REG_PATH_ID, REG_TENANT_ID);\n-- ################################\n-- USER MANAGER TABLES\n-- ################################\nCREATE TABLE UM_TENANT (\n\t\t\tUM_ID INTEGER NOT NULL AUTO_INCREMENT,\n\t        UM_DOMAIN_NAME VARCHAR(255) NOT NULL,\n            UM_EMAIL VARCHAR(255),\n            UM_ACTIVE BOOLEAN DEFAULT FALSE,\n\t        UM_CREATED_DATE TIMESTAMP NOT NULL,\n\t        UM_USER_CONFIG LONGBLOB,\n\t\t\tPRIMARY KEY (UM_ID),\n\t\t\tUNIQUE(UM_DOMAIN_NAME)\n)ENGINE INNODB;\nCREATE TABLE UM_DOMAIN(\n            UM_DOMAIN_ID INTEGER NOT NULL AUTO_INCREMENT,\n            UM_DOMAIN_NAME VARCHAR(255) NOT NULL,\n            UM_TENANT_ID INTEGER DEFAULT 0,\n            PRIMARY KEY (UM_DOMAIN_ID, UM_TENANT_ID),\n            UNIQUE(UM_DOMAIN_NAME,UM_TENANT_ID)\n)ENGINE INNODB;\nCREATE UNIQUE INDEX INDEX_UM_TENANT_UM_DOMAIN_NAME\n                    ON UM_TENANT (UM_DOMAIN_NAME);\nCREATE TABLE UM_USER (\n             UM_ID INTEGER NOT NULL AUTO_INCREMENT,\n             UM_USER_NAME VARCHAR(255) NOT NULL,\n             UM_USER_PASSWORD VARCHAR(255) NOT NULL,\n             UM_SALT_VALUE VARCHAR(31),\n             UM_REQUIRE_CHANGE BOOLEAN DEFAULT FALSE,\n             UM_CHANGED_TIME TIMESTAMP NOT NULL,\n             UM_TENANT_ID INTEGER DEFAULT 0,\n             PRIMARY KEY (UM_ID, UM_TENANT_ID),\n             UNIQUE(UM_USER_NAME, UM_TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE UM_SYSTEM_USER (\n             UM_ID INTEGER NOT NULL AUTO_INCREMENT,\n             UM_USER_NAME VARCHAR(255) NOT NULL,\n             UM_USER_PASSWORD VARCHAR(255) NOT NULL,\n             UM_SALT_VALUE VARCHAR(31),\n             UM_REQUIRE_CHANGE BOOLEAN DEFAULT FALSE,\n             UM_CHANGED_TIME TIMESTAMP NOT NULL,\n             UM_TENANT_ID INTEGER DEFAULT 0,\n             PRIMARY KEY (UM_ID, UM_TENANT_ID),\n             UNIQUE(UM_USER_NAME, UM_TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE UM_ROLE (\n             UM_ID INTEGER NOT NULL AUTO_INCREMENT,\n             UM_ROLE_NAME VARCHAR(255) NOT NULL,\n             UM_TENANT_ID INTEGER DEFAULT 0,\n\t\tUM_SHARED_ROLE BOOLEAN DEFAULT FALSE,\n             PRIMARY KEY (UM_ID, UM_TENANT_ID),\n             UNIQUE(UM_ROLE_NAME, UM_TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE UM_MODULE(\n\tUM_ID INTEGER  NOT NULL AUTO_INCREMENT,\n\tUM_MODULE_NAME VARCHAR(100),\n\tUNIQUE(UM_MODULE_NAME),\n\tPRIMARY KEY(UM_ID)\n)ENGINE INNODB;\nCREATE TABLE UM_MODULE_ACTIONS(\n\tUM_ACTION VARCHAR(255) NOT NULL,\n\tUM_MODULE_ID INTEGER NOT NULL,\n\tPRIMARY KEY(UM_ACTION, UM_MODULE_ID),\n\tFOREIGN KEY (UM_MODULE_ID) REFERENCES UM_MODULE(UM_ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE UM_PERMISSION (\n             UM_ID INTEGER NOT NULL AUTO_INCREMENT,\n             UM_RESOURCE_ID VARCHAR(255) NOT NULL,\n             UM_ACTION VARCHAR(255) NOT NULL,\n             UM_TENANT_ID INTEGER DEFAULT 0,\n\t\tUM_MODULE_ID INTEGER DEFAULT 0,\n\t\t\t       UNIQUE(UM_RESOURCE_ID,UM_ACTION, UM_TENANT_ID),\n             PRIMARY KEY (UM_ID, UM_TENANT_ID)\n)ENGINE INNODB;\nCREATE INDEX INDEX_UM_PERMISSION_UM_RESOURCE_ID_UM_ACTION ON UM_PERMISSION (UM_RESOURCE_ID, UM_ACTION, UM_TENANT_ID);\nCREATE TABLE UM_ROLE_PERMISSION (\n             UM_ID INTEGER NOT NULL AUTO_INCREMENT,\n             UM_PERMISSION_ID INTEGER NOT NULL,\n             UM_ROLE_NAME VARCHAR(255) NOT NULL,\n             UM_IS_ALLOWED SMALLINT NOT NULL,\n             UM_TENANT_ID INTEGER DEFAULT 0,\n\t     UM_DOMAIN_ID INTEGER,\n             UNIQUE (UM_PERMISSION_ID, UM_ROLE_NAME, UM_TENANT_ID, UM_DOMAIN_ID),\n\t     FOREIGN KEY (UM_PERMISSION_ID, UM_TENANT_ID) REFERENCES UM_PERMISSION(UM_ID, UM_TENANT_ID) ON DELETE CASCADE,\n\t     FOREIGN KEY (UM_DOMAIN_ID, UM_TENANT_ID) REFERENCES UM_DOMAIN(UM_DOMAIN_ID, UM_TENANT_ID) ON DELETE CASCADE,\n             PRIMARY KEY (UM_ID, UM_TENANT_ID)\n)ENGINE INNODB;\n-- REMOVED UNIQUE (UM_PERMISSION_ID, UM_ROLE_ID)\nCREATE TABLE UM_USER_PERMISSION (\n             UM_ID INTEGER NOT NULL AUTO_INCREMENT,\n             UM_PERMISSION_ID INTEGER NOT NULL,\n             UM_USER_NAME VARCHAR(255) NOT NULL,\n             UM_IS_ALLOWED SMALLINT NOT NULL,\n             UM_TENANT_ID INTEGER DEFAULT 0,\n             FOREIGN KEY (UM_PERMISSION_ID, UM_TENANT_ID) REFERENCES UM_PERMISSION(UM_ID, UM_TENANT_ID) ON DELETE CASCADE,\n             PRIMARY KEY (UM_ID, UM_TENANT_ID)\n)ENGINE INNODB;\n-- REMOVED UNIQUE (UM_PERMISSION_ID, UM_USER_ID)\nCREATE TABLE UM_USER_ROLE (\n             UM_ID INTEGER NOT NULL AUTO_INCREMENT,\n             UM_ROLE_ID INTEGER NOT NULL,\n             UM_USER_ID INTEGER NOT NULL,\n             UM_TENANT_ID INTEGER DEFAULT 0,\n             UNIQUE (UM_USER_ID, UM_ROLE_ID, UM_TENANT_ID),\n             FOREIGN KEY (UM_ROLE_ID, UM_TENANT_ID) REFERENCES UM_ROLE(UM_ID, UM_TENANT_ID),\n             FOREIGN KEY (UM_USER_ID, UM_TENANT_ID) REFERENCES UM_USER(UM_ID, UM_TENANT_ID),\n             PRIMARY KEY (UM_ID, UM_TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE UM_SHARED_USER_ROLE(\n    UM_ROLE_ID INTEGER NOT NULL,\n    UM_USER_ID INTEGER NOT NULL,\n    UM_USER_TENANT_ID INTEGER NOT NULL,\n    UM_ROLE_TENANT_ID INTEGER NOT NULL,\n    UNIQUE(UM_USER_ID,UM_ROLE_ID,UM_USER_TENANT_ID, UM_ROLE_TENANT_ID),\n    FOREIGN KEY(UM_ROLE_ID,UM_ROLE_TENANT_ID) REFERENCES UM_ROLE(UM_ID,UM_TENANT_ID) ON DELETE CASCADE,\n    FOREIGN KEY(UM_USER_ID,UM_USER_TENANT_ID) REFERENCES UM_USER(UM_ID,UM_TENANT_ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE UM_ACCOUNT_MAPPING(\n\tUM_ID INTEGER NOT NULL AUTO_INCREMENT,\n\tUM_USER_NAME VARCHAR(255) NOT NULL,\n\tUM_TENANT_ID INTEGER NOT NULL,\n\tUM_USER_STORE_DOMAIN VARCHAR(100),\n\tUM_ACC_LINK_ID INTEGER NOT NULL,\n\tUNIQUE(UM_USER_NAME, UM_TENANT_ID, UM_USER_STORE_DOMAIN, UM_ACC_LINK_ID),\n\tFOREIGN KEY (UM_TENANT_ID) REFERENCES UM_TENANT(UM_ID) ON DELETE CASCADE,\n\tPRIMARY KEY (UM_ID)\n)ENGINE INNODB;\nCREATE TABLE UM_USER_ATTRIBUTE (\n            UM_ID INTEGER NOT NULL AUTO_INCREMENT,\n            UM_ATTR_NAME VARCHAR(255) NOT NULL,\n            UM_ATTR_VALUE VARCHAR(1024),\n            UM_PROFILE_ID VARCHAR(255),\n            UM_USER_ID INTEGER,\n            UM_TENANT_ID INTEGER DEFAULT 0,\n            FOREIGN KEY (UM_USER_ID, UM_TENANT_ID) REFERENCES UM_USER(UM_ID, UM_TENANT_ID),\n            PRIMARY KEY (UM_ID, UM_TENANT_ID)\n)ENGINE INNODB;\nCREATE INDEX UM_USER_ID_INDEX ON UM_USER_ATTRIBUTE(UM_USER_ID);\nCREATE TABLE UM_DIALECT(\n            UM_ID INTEGER NOT NULL AUTO_INCREMENT,\n            UM_DIALECT_URI VARCHAR(255) NOT NULL,\n            UM_TENANT_ID INTEGER DEFAULT 0,\n            UNIQUE(UM_DIALECT_URI, UM_TENANT_ID),\n            PRIMARY KEY (UM_ID, UM_TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE UM_CLAIM(\n            UM_ID INTEGER NOT NULL AUTO_INCREMENT,\n            UM_DIALECT_ID INTEGER NOT NULL,\n            UM_CLAIM_URI VARCHAR(255) NOT NULL,\n            UM_DISPLAY_TAG VARCHAR(255),\n            UM_DESCRIPTION VARCHAR(255),\n            UM_MAPPED_ATTRIBUTE_DOMAIN VARCHAR(255),\n            UM_MAPPED_ATTRIBUTE VARCHAR(255),\n            UM_REG_EX VARCHAR(255),\n            UM_SUPPORTED SMALLINT,\n            UM_REQUIRED SMALLINT,\n            UM_DISPLAY_ORDER INTEGER,\n\t    UM_CHECKED_ATTRIBUTE SMALLINT,\n            UM_READ_ONLY SMALLINT,\n            UM_TENANT_ID INTEGER DEFAULT 0,\n            UNIQUE(UM_DIALECT_ID, UM_CLAIM_URI, UM_TENANT_ID,UM_MAPPED_ATTRIBUTE_DOMAIN),\n            FOREIGN KEY(UM_DIALECT_ID, UM_TENANT_ID) REFERENCES UM_DIALECT(UM_ID, UM_TENANT_ID),\n            PRIMARY KEY (UM_ID, UM_TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE UM_PROFILE_CONFIG(\n            UM_ID INTEGER NOT NULL AUTO_INCREMENT,\n            UM_DIALECT_ID INTEGER NOT NULL,\n            UM_PROFILE_NAME VARCHAR(255),\n            UM_TENANT_ID INTEGER DEFAULT 0,\n            FOREIGN KEY(UM_DIALECT_ID, UM_TENANT_ID) REFERENCES UM_DIALECT(UM_ID, UM_TENANT_ID),\n            PRIMARY KEY (UM_ID, UM_TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS UM_CLAIM_BEHAVIOR(\n    UM_ID INTEGER NOT NULL AUTO_INCREMENT,\n    UM_PROFILE_ID INTEGER,\n    UM_CLAIM_ID INTEGER,\n    UM_BEHAVIOUR SMALLINT,\n    UM_TENANT_ID INTEGER DEFAULT 0,\n    FOREIGN KEY(UM_PROFILE_ID, UM_TENANT_ID) REFERENCES UM_PROFILE_CONFIG(UM_ID,UM_TENANT_ID),\n    FOREIGN KEY(UM_CLAIM_ID, UM_TENANT_ID) REFERENCES UM_CLAIM(UM_ID,UM_TENANT_ID),\n    PRIMARY KEY(UM_ID, UM_TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE UM_HYBRID_ROLE(\n            UM_ID INTEGER NOT NULL AUTO_INCREMENT,\n            UM_ROLE_NAME VARCHAR(255) NOT NULL,\n            UM_TENANT_ID INTEGER DEFAULT 0,\n            PRIMARY KEY (UM_ID, UM_TENANT_ID),\n            UNIQUE(UM_ROLE_NAME,UM_TENANT_ID)\n)ENGINE INNODB;\nCREATE INDEX UM_ROLE_NAME_IND ON UM_HYBRID_ROLE(UM_ROLE_NAME);\nCREATE TABLE UM_HYBRID_USER_ROLE(\n            UM_ID INTEGER NOT NULL AUTO_INCREMENT,\n            UM_USER_NAME VARCHAR(255),\n            UM_ROLE_ID INTEGER NOT NULL,\n            UM_TENANT_ID INTEGER DEFAULT 0,\n\t    UM_DOMAIN_ID INTEGER,\n            UNIQUE (UM_USER_NAME, UM_ROLE_ID, UM_TENANT_ID, UM_DOMAIN_ID),\n            FOREIGN KEY (UM_ROLE_ID, UM_TENANT_ID) REFERENCES UM_HYBRID_ROLE(UM_ID, UM_TENANT_ID) ON DELETE CASCADE,\n\t    FOREIGN KEY (UM_DOMAIN_ID, UM_TENANT_ID) REFERENCES UM_DOMAIN(UM_DOMAIN_ID, UM_TENANT_ID) ON DELETE CASCADE,\n            PRIMARY KEY (UM_ID, UM_TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE UM_SYSTEM_ROLE(\n            UM_ID INTEGER NOT NULL AUTO_INCREMENT,\n            UM_ROLE_NAME VARCHAR(255) NOT NULL,\n            UM_TENANT_ID INTEGER DEFAULT 0,\n            PRIMARY KEY (UM_ID, UM_TENANT_ID),\n            UNIQUE(UM_ROLE_NAME,UM_TENANT_ID)\n)ENGINE INNODB;\nCREATE INDEX SYSTEM_ROLE_IND_BY_RN_TI ON UM_SYSTEM_ROLE(UM_ROLE_NAME, UM_TENANT_ID);\nCREATE TABLE UM_SYSTEM_USER_ROLE(\n            UM_ID INTEGER NOT NULL AUTO_INCREMENT,\n            UM_USER_NAME VARCHAR(255),\n            UM_ROLE_ID INTEGER NOT NULL,\n            UM_TENANT_ID INTEGER DEFAULT 0,\n            UNIQUE (UM_USER_NAME, UM_ROLE_ID, UM_TENANT_ID),\n            FOREIGN KEY (UM_ROLE_ID, UM_TENANT_ID) REFERENCES UM_SYSTEM_ROLE(UM_ID, UM_TENANT_ID),\n            PRIMARY KEY (UM_ID, UM_TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE UM_HYBRID_REMEMBER_ME(\n            UM_ID INTEGER NOT NULL AUTO_INCREMENT,\n\t\t\tUM_USER_NAME VARCHAR(255) NOT NULL,\n\t\t\tUM_COOKIE_VALUE VARCHAR(1024),\n\t\t\tUM_CREATED_TIME TIMESTAMP,\n            UM_TENANT_ID INTEGER DEFAULT 0,\n\t\t\tPRIMARY KEY (UM_ID, UM_TENANT_ID)\n)ENGINE INNODB;\nUSE WSO2IS_IDENTITY_DB\nCREATE TABLE IF NOT EXISTS IDN_BASE_TABLE (\n            PRODUCT_NAME VARCHAR(20),\n            PRIMARY KEY (PRODUCT_NAME)\n)ENGINE INNODB;\nINSERT INTO IDN_BASE_TABLE values ('WSO2 Identity Server');\nCREATE TABLE IF NOT EXISTS IDN_OAUTH_CONSUMER_APPS (\n            ID INTEGER NOT NULL AUTO_INCREMENT,\n            CONSUMER_KEY VARCHAR(255),\n            CONSUMER_SECRET VARCHAR(2048),\n            USERNAME VARCHAR(255),\n            TENANT_ID INTEGER DEFAULT 0,\n            USER_DOMAIN VARCHAR(50),\n            APP_NAME VARCHAR(255),\n            OAUTH_VERSION VARCHAR(128),\n            CALLBACK_URL VARCHAR(2048),\n            GRANT_TYPES VARCHAR (1024),\n            PKCE_MANDATORY CHAR(1) DEFAULT '0',\n            PKCE_SUPPORT_PLAIN CHAR(1) DEFAULT '0',\n            APP_STATE VARCHAR (25) DEFAULT 'ACTIVE',\n            USER_ACCESS_TOKEN_EXPIRE_TIME BIGINT DEFAULT 3600,\n            APP_ACCESS_TOKEN_EXPIRE_TIME BIGINT DEFAULT 3600,\n            REFRESH_TOKEN_EXPIRE_TIME BIGINT DEFAULT 84600,\n            ID_TOKEN_EXPIRE_TIME BIGINT DEFAULT 3600,\n            CONSTRAINT CONSUMER_KEY_CONSTRAINT UNIQUE (CONSUMER_KEY),\n            PRIMARY KEY (ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_OAUTH2_SCOPE_VALIDATORS (\n\tAPP_ID INTEGER NOT NULL,\n\tSCOPE_VALIDATOR VARCHAR (128) NOT NULL,\n\tPRIMARY KEY (APP_ID,SCOPE_VALIDATOR),\n\tFOREIGN KEY (APP_ID) REFERENCES IDN_OAUTH_CONSUMER_APPS(ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_OAUTH1A_REQUEST_TOKEN (\n            REQUEST_TOKEN VARCHAR(255),\n            REQUEST_TOKEN_SECRET VARCHAR(512),\n            CONSUMER_KEY_ID INTEGER,\n            CALLBACK_URL VARCHAR(2048),\n            SCOPE VARCHAR(2048),\n            AUTHORIZED VARCHAR(128),\n            OAUTH_VERIFIER VARCHAR(512),\n            AUTHZ_USER VARCHAR(512),\n            TENANT_ID INTEGER DEFAULT -1,\n            PRIMARY KEY (REQUEST_TOKEN),\n            FOREIGN KEY (CONSUMER_KEY_ID) REFERENCES IDN_OAUTH_CONSUMER_APPS(ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_OAUTH1A_ACCESS_TOKEN (\n            ACCESS_TOKEN VARCHAR(255),\n            ACCESS_TOKEN_SECRET VARCHAR(512),\n            CONSUMER_KEY_ID INTEGER,\n            SCOPE VARCHAR(2048),\n            AUTHZ_USER VARCHAR(512),\n            TENANT_ID INTEGER DEFAULT -1,\n            PRIMARY KEY (ACCESS_TOKEN),\n            FOREIGN KEY (CONSUMER_KEY_ID) REFERENCES IDN_OAUTH_CONSUMER_APPS(ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_OAUTH2_ACCESS_TOKEN (\n            TOKEN_ID VARCHAR (255),\n            ACCESS_TOKEN VARCHAR(2048),\n            REFRESH_TOKEN VARCHAR(2048),\n            CONSUMER_KEY_ID INTEGER,\n            AUTHZ_USER VARCHAR (100),\n            TENANT_ID INTEGER,\n            USER_DOMAIN VARCHAR(50),\n            USER_TYPE VARCHAR (25),\n            GRANT_TYPE VARCHAR (50),\n            TIME_CREATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            REFRESH_TOKEN_TIME_CREATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            VALIDITY_PERIOD BIGINT,\n            REFRESH_TOKEN_VALIDITY_PERIOD BIGINT,\n            TOKEN_SCOPE_HASH VARCHAR(32),\n            TOKEN_STATE VARCHAR(25) DEFAULT 'ACTIVE',\n            TOKEN_STATE_ID VARCHAR (128) DEFAULT 'NONE',\n            SUBJECT_IDENTIFIER VARCHAR(255),\n            ACCESS_TOKEN_HASH VARCHAR(512),\n            REFRESH_TOKEN_HASH VARCHAR(512),\n            IDP_ID INTEGER,\n            PRIMARY KEY (TOKEN_ID),\n            FOREIGN KEY (CONSUMER_KEY_ID) REFERENCES IDN_OAUTH_CONSUMER_APPS(ID) ON DELETE CASCADE,\n            CONSTRAINT CON_APP_KEY UNIQUE (CONSUMER_KEY_ID,AUTHZ_USER,TENANT_ID,USER_DOMAIN,USER_TYPE,TOKEN_SCOPE_HASH,\n                                           TOKEN_STATE,TOKEN_STATE_ID,IDP_ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_OAUTH2_ACCESS_TOKEN_AUDIT (\n            TOKEN_ID VARCHAR (255),\n            ACCESS_TOKEN VARCHAR(2048),\n            REFRESH_TOKEN VARCHAR(2048),\n            CONSUMER_KEY_ID INTEGER,\n            AUTHZ_USER VARCHAR (100),\n            TENANT_ID INTEGER,\n            USER_DOMAIN VARCHAR(50),\n            USER_TYPE VARCHAR (25),\n            GRANT_TYPE VARCHAR (50),\n            TIME_CREATED TIMESTAMP NULL,\n            REFRESH_TOKEN_TIME_CREATED TIMESTAMP NULL,\n            VALIDITY_PERIOD BIGINT,\n            REFRESH_TOKEN_VALIDITY_PERIOD BIGINT,\n            TOKEN_SCOPE_HASH VARCHAR(32),\n            TOKEN_STATE VARCHAR(25),\n            TOKEN_STATE_ID VARCHAR (128) ,\n            SUBJECT_IDENTIFIER VARCHAR(255),\n            ACCESS_TOKEN_HASH VARCHAR(512),\n            REFRESH_TOKEN_HASH VARCHAR(512),\n            INVALIDATED_TIME TIMESTAMP NULL,\n            IDP_ID INTEGER\n);\nCREATE TABLE IF NOT EXISTS IDN_OAUTH2_AUTHORIZATION_CODE (\n            CODE_ID VARCHAR (255),\n            AUTHORIZATION_CODE VARCHAR(2048),\n            CONSUMER_KEY_ID INTEGER,\n            CALLBACK_URL VARCHAR(2048),\n            SCOPE VARCHAR(2048),\n            AUTHZ_USER VARCHAR (100),\n            TENANT_ID INTEGER,\n            USER_DOMAIN VARCHAR(50),\n            TIME_CREATED TIMESTAMP,\n            VALIDITY_PERIOD BIGINT,\n            STATE VARCHAR (25) DEFAULT 'ACTIVE',\n            TOKEN_ID VARCHAR(255),\n            SUBJECT_IDENTIFIER VARCHAR(255),\n            PKCE_CODE_CHALLENGE VARCHAR(255),\n            PKCE_CODE_CHALLENGE_METHOD VARCHAR(128),\n            AUTHORIZATION_CODE_HASH VARCHAR(512),\n            IDP_ID INTEGER,\n            PRIMARY KEY (CODE_ID),\n            FOREIGN KEY (CONSUMER_KEY_ID) REFERENCES IDN_OAUTH_CONSUMER_APPS(ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_OAUTH2_ACCESS_TOKEN_SCOPE (\n            TOKEN_ID VARCHAR (255),\n            TOKEN_SCOPE VARCHAR (60),\n            TENANT_ID INTEGER DEFAULT -1,\n            PRIMARY KEY (TOKEN_ID, TOKEN_SCOPE),\n            FOREIGN KEY (TOKEN_ID) REFERENCES IDN_OAUTH2_ACCESS_TOKEN(TOKEN_ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_OAUTH2_SCOPE (\n            SCOPE_ID INTEGER NOT NULL AUTO_INCREMENT,\n            NAME VARCHAR(255) NOT NULL,\n            DISPLAY_NAME VARCHAR(255) NOT NULL,\n            DESCRIPTION VARCHAR(512),\n            TENANT_ID INTEGER NOT NULL DEFAULT -1,\n            PRIMARY KEY (SCOPE_ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_OAUTH2_SCOPE_BINDING (\n            SCOPE_ID INTEGER NOT NULL,\n            SCOPE_BINDING VARCHAR(255),\n            FOREIGN KEY (SCOPE_ID) REFERENCES IDN_OAUTH2_SCOPE(SCOPE_ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_OAUTH2_RESOURCE_SCOPE (\n            RESOURCE_PATH VARCHAR(255) NOT NULL,\n            SCOPE_ID INTEGER NOT NULL,\n            TENANT_ID INTEGER DEFAULT -1,\n            PRIMARY KEY (RESOURCE_PATH),\n            FOREIGN KEY (SCOPE_ID) REFERENCES IDN_OAUTH2_SCOPE (SCOPE_ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_SCIM_GROUP (\n            ID INTEGER AUTO_INCREMENT,\n            TENANT_ID INTEGER NOT NULL,\n            ROLE_NAME VARCHAR(255) NOT NULL,\n            ATTR_NAME VARCHAR(1024) NOT NULL,\n            ATTR_VALUE VARCHAR(1024),\n            PRIMARY KEY (ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_OPENID_REMEMBER_ME (\n            USER_NAME VARCHAR(255) NOT NULL,\n            TENANT_ID INTEGER DEFAULT 0,\n            COOKIE_VALUE VARCHAR(1024),\n            CREATED_TIME TIMESTAMP,\n            PRIMARY KEY (USER_NAME, TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_OPENID_USER_RPS (\n            USER_NAME VARCHAR(255) NOT NULL,\n            TENANT_ID INTEGER DEFAULT 0,\n            RP_URL VARCHAR(255) NOT NULL,\n            TRUSTED_ALWAYS VARCHAR(128) DEFAULT 'FALSE',\n            LAST_VISIT DATE NOT NULL,\n            VISIT_COUNT INTEGER DEFAULT 0,\n            DEFAULT_PROFILE_NAME VARCHAR(255) DEFAULT 'DEFAULT',\n            PRIMARY KEY (USER_NAME, TENANT_ID, RP_URL)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_OPENID_ASSOCIATIONS (\n            HANDLE VARCHAR(255) NOT NULL,\n            ASSOC_TYPE VARCHAR(255) NOT NULL,\n            EXPIRE_IN TIMESTAMP NOT NULL,\n            MAC_KEY VARCHAR(255) NOT NULL,\n            ASSOC_STORE VARCHAR(128) DEFAULT 'SHARED',\n            TENANT_ID INTEGER DEFAULT -1,\n            PRIMARY KEY (HANDLE)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_STS_STORE (\n            ID INTEGER AUTO_INCREMENT,\n            TOKEN_ID VARCHAR(255) NOT NULL,\n            TOKEN_CONTENT BLOB(1024) NOT NULL,\n            CREATE_DATE TIMESTAMP NOT NULL,\n            EXPIRE_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            STATE INTEGER DEFAULT 0,\n            PRIMARY KEY (ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_IDENTITY_USER_DATA (\n            TENANT_ID INTEGER DEFAULT -1234,\n            USER_NAME VARCHAR(255) NOT NULL,\n            DATA_KEY VARCHAR(255) NOT NULL,\n            DATA_VALUE VARCHAR(2048),\n            PRIMARY KEY (TENANT_ID, USER_NAME, DATA_KEY)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_IDENTITY_META_DATA (\n            USER_NAME VARCHAR(255) NOT NULL,\n            TENANT_ID INTEGER DEFAULT -1234,\n            METADATA_TYPE VARCHAR(255) NOT NULL,\n            METADATA VARCHAR(255) NOT NULL,\n            VALID VARCHAR(255) NOT NULL,\n            PRIMARY KEY (TENANT_ID, USER_NAME, METADATA_TYPE,METADATA)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_THRIFT_SESSION (\n            SESSION_ID VARCHAR(255) NOT NULL,\n            USER_NAME VARCHAR(255) NOT NULL,\n            CREATED_TIME VARCHAR(255) NOT NULL,\n            LAST_MODIFIED_TIME VARCHAR(255) NOT NULL,\n            TENANT_ID INTEGER DEFAULT -1,\n            PRIMARY KEY (SESSION_ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_AUTH_SESSION_STORE (\n            SESSION_ID VARCHAR (100) NOT NULL,\n            SESSION_TYPE VARCHAR(100) NOT NULL,\n            OPERATION VARCHAR(10) NOT NULL,\n            SESSION_OBJECT BLOB,\n            TIME_CREATED BIGINT,\n            TENANT_ID INTEGER DEFAULT -1,\n            EXPIRY_TIME BIGINT,\n            PRIMARY KEY (SESSION_ID, SESSION_TYPE, TIME_CREATED, OPERATION)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_AUTH_TEMP_SESSION_STORE (\n            SESSION_ID VARCHAR (100) NOT NULL,\n            SESSION_TYPE VARCHAR(100) NOT NULL,\n            OPERATION VARCHAR(10) NOT NULL,\n            SESSION_OBJECT BLOB,\n            TIME_CREATED BIGINT,\n            TENANT_ID INTEGER DEFAULT -1,\n            EXPIRY_TIME BIGINT,\n            PRIMARY KEY (SESSION_ID, SESSION_TYPE, TIME_CREATED, OPERATION)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_AUTH_USER (\n            USER_ID VARCHAR(255) NOT NULL,\n            USER_NAME VARCHAR(255) NOT NULL,\n            TENANT_ID INTEGER NOT NULL,\n            DOMAIN_NAME VARCHAR(255) NOT NULL,\n            IDP_ID INTEGER NOT NULL,\n            PRIMARY KEY (USER_ID),\n            CONSTRAINT USER_STORE_CONSTRAINT UNIQUE (USER_NAME, TENANT_ID, DOMAIN_NAME, IDP_ID));\nCREATE TABLE IF NOT EXISTS IDN_AUTH_USER_SESSION_MAPPING (\n            USER_ID VARCHAR(255) NOT NULL,\n            SESSION_ID VARCHAR(255) NOT NULL,\n            CONSTRAINT USER_SESSION_STORE_CONSTRAINT UNIQUE (USER_ID, SESSION_ID));\nCREATE TABLE IF NOT EXISTS IDN_AUTH_SESSION_APP_INFO (\n            SESSION_ID VARCHAR (100) NOT NULL,\n            SUBJECT VARCHAR (100) NOT NULL,\n            APP_ID INTEGER NOT NULL,\n            INBOUND_AUTH_TYPE VARCHAR (255) NOT NULL,\n            PRIMARY KEY (SESSION_ID, SUBJECT, APP_ID, INBOUND_AUTH_TYPE)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_AUTH_SESSION_META_DATA (\n            SESSION_ID VARCHAR (100) NOT NULL,\n            PROPERTY_TYPE VARCHAR (100) NOT NULL,\n            VALUE VARCHAR (255) NOT NULL,\n            PRIMARY KEY (SESSION_ID, PROPERTY_TYPE, VALUE)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS SP_APP (\n        ID INTEGER NOT NULL AUTO_INCREMENT,\n        TENANT_ID INTEGER NOT NULL,\n\t    \tAPP_NAME VARCHAR (255) NOT NULL ,\n\t    \tUSER_STORE VARCHAR (255) NOT NULL,\n        USERNAME VARCHAR (255) NOT NULL ,\n        DESCRIPTION VARCHAR (1024),\n\t    \tROLE_CLAIM VARCHAR (512),\n        AUTH_TYPE VARCHAR (255) NOT NULL,\n\t    \tPROVISIONING_USERSTORE_DOMAIN VARCHAR (512),\n\t    \tIS_LOCAL_CLAIM_DIALECT CHAR(1) DEFAULT '1',\n\t    \tIS_SEND_LOCAL_SUBJECT_ID CHAR(1) DEFAULT '0',\n\t    \tIS_SEND_AUTH_LIST_OF_IDPS CHAR(1) DEFAULT '0',\n        IS_USE_TENANT_DOMAIN_SUBJECT CHAR(1) DEFAULT '1',\n        IS_USE_USER_DOMAIN_SUBJECT CHAR(1) DEFAULT '1',\n        ENABLE_AUTHORIZATION CHAR(1) DEFAULT '0',\n\t    \tSUBJECT_CLAIM_URI VARCHAR (512),\n\t    \tIS_SAAS_APP CHAR(1) DEFAULT '0',\n\t    \tIS_DUMB_MODE CHAR(1) DEFAULT '0',\n        PRIMARY KEY (ID)\n)ENGINE INNODB;\nALTER TABLE SP_APP ADD CONSTRAINT APPLICATION_NAME_CONSTRAINT UNIQUE(APP_NAME, TENANT_ID);\nCREATE TABLE IF NOT EXISTS SP_METADATA (\n            ID INTEGER AUTO_INCREMENT,\n            SP_ID INTEGER,\n            NAME VARCHAR(255) NOT NULL,\n            VALUE VARCHAR(255) NOT NULL,\n            DISPLAY_NAME VARCHAR(255),\n            TENANT_ID INTEGER DEFAULT -1,\n            PRIMARY KEY (ID),\n            CONSTRAINT SP_METADATA_CONSTRAINT UNIQUE (SP_ID, NAME),\n            FOREIGN KEY (SP_ID) REFERENCES SP_APP(ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS SP_INBOUND_AUTH (\n            ID INTEGER NOT NULL AUTO_INCREMENT,\n            TENANT_ID INTEGER NOT NULL,\n            INBOUND_AUTH_KEY VARCHAR (255),\n            INBOUND_AUTH_TYPE VARCHAR (255) NOT NULL,\n            INBOUND_CONFIG_TYPE VARCHAR (255) NOT NULL,\n            PROP_NAME VARCHAR (255),\n            PROP_VALUE VARCHAR (1024) ,\n            APP_ID INTEGER NOT NULL,\n            PRIMARY KEY (ID)\n)ENGINE INNODB;\nALTER TABLE SP_INBOUND_AUTH ADD CONSTRAINT APPLICATION_ID_CONSTRAINT FOREIGN KEY (APP_ID) REFERENCES SP_APP (ID) ON DELETE CASCADE;\nCREATE TABLE IF NOT EXISTS SP_AUTH_STEP (\n            ID INTEGER NOT NULL AUTO_INCREMENT,\n            TENANT_ID INTEGER NOT NULL,\n            STEP_ORDER INTEGER DEFAULT 1,\n            APP_ID INTEGER NOT NULL ,\n            IS_SUBJECT_STEP CHAR(1) DEFAULT '0',\n            IS_ATTRIBUTE_STEP CHAR(1) DEFAULT '0',\n            PRIMARY KEY (ID)\n)ENGINE INNODB;\nALTER TABLE SP_AUTH_STEP ADD CONSTRAINT APPLICATION_ID_CONSTRAINT_STEP FOREIGN KEY (APP_ID) REFERENCES SP_APP (ID) ON DELETE CASCADE;\nCREATE TABLE IF NOT EXISTS SP_FEDERATED_IDP (\n            ID INTEGER NOT NULL,\n            TENANT_ID INTEGER NOT NULL,\n            AUTHENTICATOR_ID INTEGER NOT NULL,\n            PRIMARY KEY (ID, AUTHENTICATOR_ID)\n)ENGINE INNODB;\nALTER TABLE SP_FEDERATED_IDP ADD CONSTRAINT STEP_ID_CONSTRAINT FOREIGN KEY (ID) REFERENCES SP_AUTH_STEP (ID) ON DELETE CASCADE;\nCREATE TABLE IF NOT EXISTS SP_CLAIM_DIALECT (\n\t   \tID INTEGER NOT NULL AUTO_INCREMENT,\n\t   \tTENANT_ID INTEGER NOT NULL,\n\t   \tSP_DIALECT VARCHAR (512) NOT NULL,\n\t   \tAPP_ID INTEGER NOT NULL,\n\t   \tPRIMARY KEY (ID));\nALTER TABLE SP_CLAIM_DIALECT ADD CONSTRAINT DIALECTID_APPID_CONSTRAINT FOREIGN KEY (APP_ID) REFERENCES SP_APP (ID) ON DELETE CASCADE;\nCREATE TABLE IF NOT EXISTS SP_CLAIM_MAPPING (\n            ID INTEGER NOT NULL AUTO_INCREMENT,\n            TENANT_ID INTEGER NOT NULL,\n            IDP_CLAIM VARCHAR (512) NOT NULL ,\n            SP_CLAIM VARCHAR (512) NOT NULL ,\n            APP_ID INTEGER NOT NULL,\n            IS_REQUESTED VARCHAR(128) DEFAULT '0',\n\t    IS_MANDATORY VARCHAR(128) DEFAULT '0',\n            DEFAULT_VALUE VARCHAR(255),\n            PRIMARY KEY (ID)\n)ENGINE INNODB;\nALTER TABLE SP_CLAIM_MAPPING ADD CONSTRAINT CLAIMID_APPID_CONSTRAINT FOREIGN KEY (APP_ID) REFERENCES SP_APP (ID) ON DELETE CASCADE;\nCREATE TABLE IF NOT EXISTS SP_ROLE_MAPPING (\n            ID INTEGER NOT NULL AUTO_INCREMENT,\n            TENANT_ID INTEGER NOT NULL,\n            IDP_ROLE VARCHAR (255) NOT NULL ,\n            SP_ROLE VARCHAR (255) NOT NULL ,\n            APP_ID INTEGER NOT NULL,\n            PRIMARY KEY (ID)\n)ENGINE INNODB;\nALTER TABLE SP_ROLE_MAPPING ADD CONSTRAINT ROLEID_APPID_CONSTRAINT FOREIGN KEY (APP_ID) REFERENCES SP_APP (ID) ON DELETE CASCADE;\nCREATE TABLE IF NOT EXISTS SP_REQ_PATH_AUTHENTICATOR (\n            ID INTEGER NOT NULL AUTO_INCREMENT,\n            TENANT_ID INTEGER NOT NULL,\n            AUTHENTICATOR_NAME VARCHAR (255) NOT NULL ,\n            APP_ID INTEGER NOT NULL,\n            PRIMARY KEY (ID)\n)ENGINE INNODB;\nALTER TABLE SP_REQ_PATH_AUTHENTICATOR ADD CONSTRAINT REQ_AUTH_APPID_CONSTRAINT FOREIGN KEY (APP_ID) REFERENCES SP_APP (ID) ON DELETE CASCADE;\nCREATE TABLE IF NOT EXISTS SP_PROVISIONING_CONNECTOR (\n            ID INTEGER NOT NULL AUTO_INCREMENT,\n            TENANT_ID INTEGER NOT NULL,\n            IDP_NAME VARCHAR (255) NOT NULL ,\n            CONNECTOR_NAME VARCHAR (255) NOT NULL ,\n            APP_ID INTEGER NOT NULL,\n            IS_JIT_ENABLED CHAR(1) NOT NULL DEFAULT '0',\n            BLOCKING CHAR(1) NOT NULL DEFAULT '0',\n            RULE_ENABLED CHAR(1) NOT NULL DEFAULT '0',\n            PRIMARY KEY (ID)\n)ENGINE INNODB;\nALTER TABLE SP_PROVISIONING_CONNECTOR ADD CONSTRAINT PRO_CONNECTOR_APPID_CONSTRAINT FOREIGN KEY (APP_ID) REFERENCES SP_APP (ID) ON DELETE CASCADE;\nCREATE TABLE SP_AUTH_SCRIPT (\n  ID         INTEGER AUTO_INCREMENT NOT NULL,\n  TENANT_ID  INTEGER                NOT NULL,\n  APP_ID     INTEGER                NOT NULL,\n  TYPE       VARCHAR(255)           NOT NULL,\n  CONTENT    BLOB    DEFAULT NULL,\n  IS_ENABLED CHAR(1) NOT NULL DEFAULT '0',\n  PRIMARY KEY (ID));\nCREATE TABLE IF NOT EXISTS SP_TEMPLATE (\n  ID         INTEGER AUTO_INCREMENT NOT NULL,\n  TENANT_ID  INTEGER                NOT NULL,\n  NAME VARCHAR(255) NOT NULL,\n  DESCRIPTION VARCHAR(1023),\n  CONTENT BLOB DEFAULT NULL,\n  PRIMARY KEY (ID),\n  CONSTRAINT SP_TEMPLATE_CONSTRAINT UNIQUE (TENANT_ID, NAME));\nCREATE TABLE IF NOT EXISTS IDN_AUTH_WAIT_STATUS (\n  ID              INTEGER AUTO_INCREMENT NOT NULL,\n  TENANT_ID       INTEGER                NOT NULL,\n  LONG_WAIT_KEY   VARCHAR(255)           NOT NULL,\n  WAIT_STATUS     CHAR(1) NOT NULL DEFAULT '1',\n  TIME_CREATED    TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  EXPIRE_TIME     TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  PRIMARY KEY (ID),\n  CONSTRAINT IDN_AUTH_WAIT_STATUS_KEY UNIQUE (LONG_WAIT_KEY));\nCREATE TABLE IF NOT EXISTS IDP (\n\t\t\tID INTEGER AUTO_INCREMENT,\n\t\t\tTENANT_ID INTEGER,\n\t\t\tNAME VARCHAR(254) NOT NULL,\n\t\t\tIS_ENABLED CHAR(1) NOT NULL DEFAULT '1',\n\t\t\tIS_PRIMARY CHAR(1) NOT NULL DEFAULT '0',\n\t\t\tHOME_REALM_ID VARCHAR(254),\n\t\t\tIMAGE MEDIUMBLOB,\n\t\t\tCERTIFICATE BLOB,\n\t\t\tALIAS VARCHAR(254),\n\t\t\tINBOUND_PROV_ENABLED CHAR (1) NOT NULL DEFAULT '0',\n\t\t\tINBOUND_PROV_USER_STORE_ID VARCHAR(254),\n \t\t\tUSER_CLAIM_URI VARCHAR(254),\n \t\t\tROLE_CLAIM_URI VARCHAR(254),\n  \t\t\tDESCRIPTION VARCHAR (1024),\n \t\t\tDEFAULT_AUTHENTICATOR_NAME VARCHAR(254),\n \t\t\tDEFAULT_PRO_CONNECTOR_NAME VARCHAR(254),\n \t\t\tPROVISIONING_ROLE VARCHAR(128),\n \t\t\tIS_FEDERATION_HUB CHAR(1) NOT NULL DEFAULT '0',\n \t\t\tIS_LOCAL_CLAIM_DIALECT CHAR(1) NOT NULL DEFAULT '0',\n            DISPLAY_NAME VARCHAR(255),\n\t\t\tPRIMARY KEY (ID),\n\t\t\tUNIQUE (TENANT_ID, NAME)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDP_ROLE (\n\t\t\tID INTEGER AUTO_INCREMENT,\n\t\t\tIDP_ID INTEGER,\n\t\t\tTENANT_ID INTEGER,\n\t\t\tROLE VARCHAR(254),\n\t\t\tPRIMARY KEY (ID),\n\t\t\tUNIQUE (IDP_ID, ROLE),\n\t\t\tFOREIGN KEY (IDP_ID) REFERENCES IDP(ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDP_ROLE_MAPPING (\n\t\t\tID INTEGER AUTO_INCREMENT,\n\t\t\tIDP_ROLE_ID INTEGER,\n\t\t\tTENANT_ID INTEGER,\n\t\t\tUSER_STORE_ID VARCHAR (253),\n\t\t\tLOCAL_ROLE VARCHAR(253),\n\t\t\tPRIMARY KEY (ID),\n\t\t\tUNIQUE (IDP_ROLE_ID, TENANT_ID, USER_STORE_ID, LOCAL_ROLE),\n\t\t\tFOREIGN KEY (IDP_ROLE_ID) REFERENCES IDP_ROLE(ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDP_CLAIM (\n\t\t\tID INTEGER AUTO_INCREMENT,\n\t\t\tIDP_ID INTEGER,\n\t\t\tTENANT_ID INTEGER,\n\t\t\tCLAIM VARCHAR(254),\n\t\t\tPRIMARY KEY (ID),\n\t\t\tUNIQUE (IDP_ID, CLAIM),\n\t\t\tFOREIGN KEY (IDP_ID) REFERENCES IDP(ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDP_CLAIM_MAPPING (\n            ID INTEGER AUTO_INCREMENT,\n            IDP_CLAIM_ID INTEGER,\n            TENANT_ID INTEGER,\n            LOCAL_CLAIM VARCHAR(253),\n            DEFAULT_VALUE VARCHAR(255),\n            IS_REQUESTED VARCHAR(128) DEFAULT '0',\n            PRIMARY KEY (ID),\n            UNIQUE (IDP_CLAIM_ID, TENANT_ID, LOCAL_CLAIM),\n            FOREIGN KEY (IDP_CLAIM_ID) REFERENCES IDP_CLAIM(ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDP_AUTHENTICATOR (\n            ID INTEGER AUTO_INCREMENT,\n            TENANT_ID INTEGER,\n            IDP_ID INTEGER,\n            NAME VARCHAR(255) NOT NULL,\n            IS_ENABLED CHAR (1) DEFAULT '1',\n            DISPLAY_NAME VARCHAR(255),\n            PRIMARY KEY (ID),\n            UNIQUE (TENANT_ID, IDP_ID, NAME),\n            FOREIGN KEY (IDP_ID) REFERENCES IDP(ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDP_METADATA (\n            ID INTEGER AUTO_INCREMENT,\n            IDP_ID INTEGER,\n            NAME VARCHAR(255) NOT NULL,\n            VALUE VARCHAR(255) NOT NULL,\n            DISPLAY_NAME VARCHAR(255),\n            TENANT_ID INTEGER DEFAULT -1,\n            PRIMARY KEY (ID),\n            CONSTRAINT IDP_METADATA_CONSTRAINT UNIQUE (IDP_ID, NAME),\n            FOREIGN KEY (IDP_ID) REFERENCES IDP(ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDP_AUTHENTICATOR_PROPERTY (\n            ID INTEGER AUTO_INCREMENT,\n            TENANT_ID INTEGER,\n            AUTHENTICATOR_ID INTEGER,\n            PROPERTY_KEY VARCHAR(255) NOT NULL,\n            PROPERTY_VALUE VARCHAR(2047),\n            IS_SECRET CHAR (1) DEFAULT '0',\n            PRIMARY KEY (ID),\n            UNIQUE (TENANT_ID, AUTHENTICATOR_ID, PROPERTY_KEY),\n            FOREIGN KEY (AUTHENTICATOR_ID) REFERENCES IDP_AUTHENTICATOR(ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDP_PROVISIONING_CONFIG (\n            ID INTEGER AUTO_INCREMENT,\n            TENANT_ID INTEGER,\n            IDP_ID INTEGER,\n            PROVISIONING_CONNECTOR_TYPE VARCHAR(255) NOT NULL,\n            IS_ENABLED CHAR (1) DEFAULT '0',\n            IS_BLOCKING CHAR (1) DEFAULT '0',\n            IS_RULES_ENABLED CHAR (1) DEFAULT '0',\n            PRIMARY KEY (ID),\n            UNIQUE (TENANT_ID, IDP_ID, PROVISIONING_CONNECTOR_TYPE),\n            FOREIGN KEY (IDP_ID) REFERENCES IDP(ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDP_PROV_CONFIG_PROPERTY (\n            ID INTEGER AUTO_INCREMENT,\n            TENANT_ID INTEGER,\n            PROVISIONING_CONFIG_ID INTEGER,\n            PROPERTY_KEY VARCHAR(255) NOT NULL,\n            PROPERTY_VALUE VARCHAR(2048),\n            PROPERTY_BLOB_VALUE BLOB,\n            PROPERTY_TYPE CHAR(32) NOT NULL,\n            IS_SECRET CHAR (1) DEFAULT '0',\n            PRIMARY KEY (ID),\n            UNIQUE (TENANT_ID, PROVISIONING_CONFIG_ID, PROPERTY_KEY),\n            FOREIGN KEY (PROVISIONING_CONFIG_ID) REFERENCES IDP_PROVISIONING_CONFIG(ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDP_PROVISIONING_ENTITY (\n            ID INTEGER AUTO_INCREMENT,\n            PROVISIONING_CONFIG_ID INTEGER,\n            ENTITY_TYPE VARCHAR(255) NOT NULL,\n            ENTITY_LOCAL_USERSTORE VARCHAR(255) NOT NULL,\n            ENTITY_NAME VARCHAR(255) NOT NULL,\n            ENTITY_VALUE VARCHAR(255),\n            TENANT_ID INTEGER,\n            ENTITY_LOCAL_ID VARCHAR(255),\n            PRIMARY KEY (ID),\n            UNIQUE (ENTITY_TYPE, TENANT_ID, ENTITY_LOCAL_USERSTORE, ENTITY_NAME, PROVISIONING_CONFIG_ID),\n            UNIQUE (PROVISIONING_CONFIG_ID, ENTITY_TYPE, ENTITY_VALUE),\n            FOREIGN KEY (PROVISIONING_CONFIG_ID) REFERENCES IDP_PROVISIONING_CONFIG(ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDP_LOCAL_CLAIM (\n            ID INTEGER AUTO_INCREMENT,\n            TENANT_ID INTEGER,\n            IDP_ID INTEGER,\n            CLAIM_URI VARCHAR(255) NOT NULL,\n            DEFAULT_VALUE VARCHAR(255),\n            IS_REQUESTED VARCHAR(128) DEFAULT '0',\n            PRIMARY KEY (ID),\n            UNIQUE (TENANT_ID, IDP_ID, CLAIM_URI),\n            FOREIGN KEY (IDP_ID) REFERENCES IDP(ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_ASSOCIATED_ID (\n            ID INTEGER AUTO_INCREMENT,\n            IDP_USER_ID VARCHAR(255) NOT NULL,\n            TENANT_ID INTEGER DEFAULT -1234,\n            IDP_ID INTEGER NOT NULL,\n            DOMAIN_NAME VARCHAR(255) NOT NULL,\n            USER_NAME VARCHAR(255) NOT NULL,\n            PRIMARY KEY (ID),\n            UNIQUE(IDP_USER_ID, TENANT_ID, IDP_ID),\n            FOREIGN KEY (IDP_ID) REFERENCES IDP(ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_USER_ACCOUNT_ASSOCIATION (\n            ASSOCIATION_KEY VARCHAR(255) NOT NULL,\n            TENANT_ID INTEGER,\n            DOMAIN_NAME VARCHAR(255) NOT NULL,\n            USER_NAME VARCHAR(255) NOT NULL,\n            PRIMARY KEY (TENANT_ID, DOMAIN_NAME, USER_NAME)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS FIDO_DEVICE_STORE (\n            TENANT_ID INTEGER,\n            DOMAIN_NAME VARCHAR(255) NOT NULL,\n            USER_NAME VARCHAR(45) NOT NULL,\n            TIME_REGISTERED TIMESTAMP,\n            KEY_HANDLE VARCHAR(200) NOT NULL,\n            DEVICE_DATA VARCHAR(2048) NOT NULL,\n            PRIMARY KEY (TENANT_ID, DOMAIN_NAME, USER_NAME, KEY_HANDLE)\n        )ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS FIDO2_DEVICE_STORE (\n            TENANT_ID INTEGER,\n            DOMAIN_NAME VARCHAR(255) NOT NULL,\n            USER_NAME VARCHAR(45) NOT NULL,\n            TIME_REGISTERED TIMESTAMP,\n            USER_HANDLE VARCHAR(64) NOT NULL,\n            CREDENTIAL_ID VARCHAR(200) NOT NULL,\n            PUBLIC_KEY_COSE VARCHAR(1024) NOT NULL,\n            SIGNATURE_COUNT BIGINT,\n            USER_IDENTITY VARCHAR(512) NOT NULL,\n            PRIMARY KEY (CREDENTIAL_ID, USER_HANDLE)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS WF_REQUEST (\n    UUID VARCHAR (45),\n    CREATED_BY VARCHAR (255),\n    TENANT_ID INTEGER DEFAULT -1,\n    OPERATION_TYPE VARCHAR (50),\n    CREATED_AT TIMESTAMP,\n    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    STATUS VARCHAR (30),\n    REQUEST BLOB,\n    PRIMARY KEY (UUID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS WF_BPS_PROFILE (\n    PROFILE_NAME VARCHAR(45),\n    HOST_URL_MANAGER VARCHAR(255),\n    HOST_URL_WORKER VARCHAR(255),\n    USERNAME VARCHAR(45),\n    PASSWORD VARCHAR(1023),\n    CALLBACK_HOST VARCHAR (45),\n    CALLBACK_USERNAME VARCHAR (45),\n    CALLBACK_PASSWORD VARCHAR (255),\n    TENANT_ID INTEGER DEFAULT -1,\n    PRIMARY KEY (PROFILE_NAME, TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS WF_WORKFLOW(\n    ID VARCHAR (45),\n    WF_NAME VARCHAR (45),\n    DESCRIPTION VARCHAR (255),\n    TEMPLATE_ID VARCHAR (45),\n    IMPL_ID VARCHAR (45),\n    TENANT_ID INTEGER DEFAULT -1,\n    PRIMARY KEY (ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS WF_WORKFLOW_ASSOCIATION(\n    ID INTEGER NOT NULL AUTO_INCREMENT,\n    ASSOC_NAME VARCHAR (45),\n    EVENT_ID VARCHAR(45),\n    ASSOC_CONDITION VARCHAR (2000),\n    WORKFLOW_ID VARCHAR (45),\n    IS_ENABLED CHAR (1) DEFAULT '1',\n    TENANT_ID INTEGER DEFAULT -1,\n    PRIMARY KEY(ID),\n    FOREIGN KEY (WORKFLOW_ID) REFERENCES WF_WORKFLOW(ID)ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS WF_WORKFLOW_CONFIG_PARAM(\n    WORKFLOW_ID VARCHAR (45),\n    PARAM_NAME VARCHAR (45),\n    PARAM_VALUE VARCHAR (1000),\n    PARAM_QNAME VARCHAR (45),\n    PARAM_HOLDER VARCHAR (45),\n    TENANT_ID INTEGER DEFAULT -1,\n    PRIMARY KEY (WORKFLOW_ID, PARAM_NAME, PARAM_QNAME, PARAM_HOLDER),\n    FOREIGN KEY (WORKFLOW_ID) REFERENCES WF_WORKFLOW(ID)ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS WF_REQUEST_ENTITY_RELATIONSHIP(\n  REQUEST_ID VARCHAR (45),\n  ENTITY_NAME VARCHAR (255),\n  ENTITY_TYPE VARCHAR (50),\n  TENANT_ID INTEGER DEFAULT -1,\n  PRIMARY KEY(REQUEST_ID, ENTITY_NAME, ENTITY_TYPE, TENANT_ID),\n  FOREIGN KEY (REQUEST_ID) REFERENCES WF_REQUEST(UUID)ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS WF_WORKFLOW_REQUEST_RELATION(\n  RELATIONSHIP_ID VARCHAR (45),\n  WORKFLOW_ID VARCHAR (45),\n  REQUEST_ID VARCHAR (45),\n  UPDATED_AT TIMESTAMP,\n  STATUS VARCHAR (30),\n  TENANT_ID INTEGER DEFAULT -1,\n  PRIMARY KEY (RELATIONSHIP_ID),\n  FOREIGN KEY (WORKFLOW_ID) REFERENCES WF_WORKFLOW(ID)ON DELETE CASCADE,\n  FOREIGN KEY (REQUEST_ID) REFERENCES WF_REQUEST(UUID)ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_RECOVERY_DATA (\n  USER_NAME VARCHAR(255) NOT NULL,\n  USER_DOMAIN VARCHAR(127) NOT NULL,\n  TENANT_ID INTEGER DEFAULT -1,\n  CODE VARCHAR(255) NOT NULL,\n  SCENARIO VARCHAR(255) NOT NULL,\n  STEP VARCHAR(127) NOT NULL,\n  TIME_CREATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  REMAINING_SETS VARCHAR(2500) DEFAULT NULL,\n  PRIMARY KEY(USER_NAME, USER_DOMAIN, TENANT_ID, SCENARIO,STEP),\n  UNIQUE(CODE)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_PASSWORD_HISTORY_DATA (\n  ID INTEGER NOT NULL AUTO_INCREMENT,\n  USER_NAME   VARCHAR(255) NOT NULL,\n  USER_DOMAIN VARCHAR(127) NOT NULL,\n  TENANT_ID   INTEGER DEFAULT -1,\n  SALT_VALUE  VARCHAR(255),\n  HASH        VARCHAR(255) NOT NULL,\n  TIME_CREATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  PRIMARY KEY(ID),\n  UNIQUE (USER_NAME,USER_DOMAIN,TENANT_ID,SALT_VALUE,HASH)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_CLAIM_DIALECT (\n  ID INTEGER NOT NULL AUTO_INCREMENT,\n  DIALECT_URI VARCHAR (255) NOT NULL,\n  TENANT_ID INTEGER NOT NULL,\n  PRIMARY KEY (ID),\n  CONSTRAINT DIALECT_URI_CONSTRAINT UNIQUE (DIALECT_URI, TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_CLAIM (\n  ID INTEGER NOT NULL AUTO_INCREMENT,\n  DIALECT_ID INTEGER,\n  CLAIM_URI VARCHAR (255) NOT NULL,\n  TENANT_ID INTEGER NOT NULL,\n  PRIMARY KEY (ID),\n  FOREIGN KEY (DIALECT_ID) REFERENCES IDN_CLAIM_DIALECT(ID) ON DELETE CASCADE,\n  CONSTRAINT CLAIM_URI_CONSTRAINT UNIQUE (DIALECT_ID, CLAIM_URI, TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_CLAIM_MAPPED_ATTRIBUTE (\n  ID INTEGER NOT NULL AUTO_INCREMENT,\n  LOCAL_CLAIM_ID INTEGER,\n  USER_STORE_DOMAIN_NAME VARCHAR (255) NOT NULL,\n  ATTRIBUTE_NAME VARCHAR (255) NOT NULL,\n  TENANT_ID INTEGER NOT NULL,\n  PRIMARY KEY (ID),\n  FOREIGN KEY (LOCAL_CLAIM_ID) REFERENCES IDN_CLAIM(ID) ON DELETE CASCADE,\n  CONSTRAINT USER_STORE_DOMAIN_CONSTRAINT UNIQUE (LOCAL_CLAIM_ID, USER_STORE_DOMAIN_NAME, TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_CLAIM_PROPERTY (\n  ID INTEGER NOT NULL AUTO_INCREMENT,\n  LOCAL_CLAIM_ID INTEGER,\n  PROPERTY_NAME VARCHAR (255) NOT NULL,\n  PROPERTY_VALUE VARCHAR (255) NOT NULL,\n  TENANT_ID INTEGER NOT NULL,\n  PRIMARY KEY (ID),\n  FOREIGN KEY (LOCAL_CLAIM_ID) REFERENCES IDN_CLAIM(ID) ON DELETE CASCADE,\n  CONSTRAINT PROPERTY_NAME_CONSTRAINT UNIQUE (LOCAL_CLAIM_ID, PROPERTY_NAME, TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_CLAIM_MAPPING (\n  ID INTEGER NOT NULL AUTO_INCREMENT,\n  EXT_CLAIM_ID INTEGER NOT NULL,\n  MAPPED_LOCAL_CLAIM_ID INTEGER NOT NULL,\n  TENANT_ID INTEGER NOT NULL,\n  PRIMARY KEY (ID),\n  FOREIGN KEY (EXT_CLAIM_ID) REFERENCES IDN_CLAIM(ID) ON DELETE CASCADE,\n  FOREIGN KEY (MAPPED_LOCAL_CLAIM_ID) REFERENCES IDN_CLAIM(ID) ON DELETE CASCADE,\n  CONSTRAINT EXT_TO_LOC_MAPPING_CONSTRN UNIQUE (EXT_CLAIM_ID, TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS  IDN_SAML2_ASSERTION_STORE (\n  ID INTEGER NOT NULL AUTO_INCREMENT,\n  SAML2_ID  VARCHAR(255) ,\n  SAML2_ISSUER  VARCHAR(255) ,\n  SAML2_SUBJECT  VARCHAR(255) ,\n  SAML2_SESSION_INDEX  VARCHAR(255) ,\n  SAML2_AUTHN_CONTEXT_CLASS_REF  VARCHAR(255) ,\n  SAML2_ASSERTION  VARCHAR(4096) ,\n  ASSERTION BLOB ,\n  PRIMARY KEY (ID)\n)ENGINE INNODB;\nCREATE TABLE IDN_SAML2_ARTIFACT_STORE (\n  ID INT(11) NOT NULL AUTO_INCREMENT,\n  SOURCE_ID VARCHAR(255) NOT NULL,\n  MESSAGE_HANDLER VARCHAR(255) NOT NULL,\n  AUTHN_REQ_DTO BLOB NOT NULL,\n  SESSION_ID VARCHAR(255) NOT NULL,\n  EXP_TIMESTAMP TIMESTAMP NOT NULL,\n  INIT_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  ASSERTION_ID VARCHAR(255),\n  PRIMARY KEY (`ID`)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_OIDC_JTI (\n  JWT_ID VARCHAR(255) NOT NULL,\n  EXP_TIME TIMESTAMP NOT NULL ,\n  TIME_CREATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ,\n  PRIMARY KEY (JWT_ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS  IDN_OIDC_PROPERTY (\n  ID INTEGER NOT NULL AUTO_INCREMENT,\n  TENANT_ID  INTEGER,\n  CONSUMER_KEY  VARCHAR(255) ,\n  PROPERTY_KEY  VARCHAR(255) NOT NULL,\n  PROPERTY_VALUE  VARCHAR(2047) ,\n  PRIMARY KEY (ID),\n  FOREIGN KEY (CONSUMER_KEY) REFERENCES IDN_OAUTH_CONSUMER_APPS(CONSUMER_KEY) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_OIDC_REQ_OBJECT_REFERENCE (\n  ID INTEGER NOT NULL AUTO_INCREMENT,\n  CONSUMER_KEY_ID INTEGER ,\n  CODE_ID VARCHAR(255) ,\n  TOKEN_ID VARCHAR(255) ,\n  SESSION_DATA_KEY VARCHAR(255),\n  PRIMARY KEY (ID),\n  FOREIGN KEY (CONSUMER_KEY_ID) REFERENCES IDN_OAUTH_CONSUMER_APPS(ID) ON DELETE CASCADE,\n  FOREIGN KEY (TOKEN_ID) REFERENCES IDN_OAUTH2_ACCESS_TOKEN(TOKEN_ID) ON DELETE CASCADE,\n  FOREIGN KEY (CODE_ID) REFERENCES IDN_OAUTH2_AUTHORIZATION_CODE(CODE_ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_OIDC_REQ_OBJECT_CLAIMS (\n  ID INTEGER NOT NULL AUTO_INCREMENT,\n  REQ_OBJECT_ID INTEGER,\n  CLAIM_ATTRIBUTE VARCHAR(255) ,\n  ESSENTIAL CHAR(1) NOT NULL DEFAULT '0' ,\n  VALUE VARCHAR(255) ,\n  IS_USERINFO CHAR(1) NOT NULL DEFAULT '0',\n  PRIMARY KEY (ID),\n  FOREIGN KEY (REQ_OBJECT_ID) REFERENCES IDN_OIDC_REQ_OBJECT_REFERENCE (ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_OIDC_REQ_OBJ_CLAIM_VALUES (\n  ID INTEGER NOT NULL AUTO_INCREMENT,\n  REQ_OBJECT_CLAIMS_ID INTEGER ,\n  CLAIM_VALUES VARCHAR(255) ,\n  PRIMARY KEY (ID),\n  FOREIGN KEY (REQ_OBJECT_CLAIMS_ID) REFERENCES  IDN_OIDC_REQ_OBJECT_CLAIMS(ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_CERTIFICATE (\n             ID INTEGER NOT NULL AUTO_INCREMENT,\n             NAME VARCHAR(100),\n             CERTIFICATE_IN_PEM BLOB,\n             TENANT_ID INTEGER DEFAULT 0,\n             PRIMARY KEY(ID),\n             CONSTRAINT CERTIFICATE_UNIQUE_KEY UNIQUE (NAME, TENANT_ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_OIDC_SCOPE (\n            ID INTEGER NOT NULL AUTO_INCREMENT,\n            NAME VARCHAR(255) NOT NULL,\n            TENANT_ID INTEGER DEFAULT -1,\n            PRIMARY KEY (ID)\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_OIDC_SCOPE_CLAIM_MAPPING (\n            ID INTEGER NOT NULL AUTO_INCREMENT,\n            SCOPE_ID INTEGER,\n            EXTERNAL_CLAIM_ID INTEGER,\n            PRIMARY KEY (ID),\n            FOREIGN KEY (SCOPE_ID) REFERENCES IDN_OIDC_SCOPE(ID) ON DELETE CASCADE,\n            FOREIGN KEY (EXTERNAL_CLAIM_ID) REFERENCES IDN_CLAIM(ID) ON DELETE CASCADE\n)ENGINE INNODB;\nCREATE TABLE IF NOT EXISTS IDN_FUNCTION_LIBRARY (\n\tNAME VARCHAR(255) NOT NULL,\n\tDESCRIPTION VARCHAR(1023),\n\tTYPE VARCHAR(255) NOT NULL,\n\tTENANT_ID INTEGER NOT NULL,\n\tDATA BLOB NOT NULL,\n\tPRIMARY KEY (TENANT_ID,NAME)\n)ENGINE INNODB;\n-- --------------------------- INDEX CREATION -----------------------------\n-- IDN_OAUTH2_ACCESS_TOKEN --\nCREATE INDEX IDX_TC ON IDN_OAUTH2_ACCESS_TOKEN(TIME_CREATED);\nCREATE INDEX IDX_ATH ON IDN_OAUTH2_ACCESS_TOKEN(ACCESS_TOKEN_HASH);\nCREATE INDEX IDX_AT_CK_AU ON IDN_OAUTH2_ACCESS_TOKEN(CONSUMER_KEY_ID, AUTHZ_USER, TOKEN_STATE, USER_TYPE);\nCREATE INDEX IDX_AT_TI_UD ON IDN_OAUTH2_ACCESS_TOKEN(AUTHZ_USER, TENANT_ID, TOKEN_STATE, USER_DOMAIN);\nCREATE INDEX IDX_AT_AU_TID_UD_TS_CKID ON IDN_OAUTH2_ACCESS_TOKEN(AUTHZ_USER, TENANT_ID, USER_DOMAIN, TOKEN_STATE, CONSUMER_KEY_ID);\nCREATE INDEX IDX_AT_AT ON IDN_OAUTH2_ACCESS_TOKEN(ACCESS_TOKEN);\nCREATE INDEX IDX_AT_AU_CKID_TS_UT ON IDN_OAUTH2_ACCESS_TOKEN(AUTHZ_USER, CONSUMER_KEY_ID, TOKEN_STATE, USER_TYPE);\nCREATE INDEX IDX_AT_RTH ON IDN_OAUTH2_ACCESS_TOKEN(REFRESH_TOKEN_HASH);\nCREATE INDEX IDX_AT_RT ON IDN_OAUTH2_ACCESS_TOKEN(REFRESH_TOKEN);\n-- IDN_OAUTH2_AUTHORIZATION_CODE --\nCREATE INDEX IDX_AUTHORIZATION_CODE_HASH ON IDN_OAUTH2_AUTHORIZATION_CODE (AUTHORIZATION_CODE_HASH, CONSUMER_KEY_ID);\nCREATE INDEX IDX_AUTHORIZATION_CODE_AU_TI ON IDN_OAUTH2_AUTHORIZATION_CODE (AUTHZ_USER, TENANT_ID, USER_DOMAIN, STATE);\nCREATE INDEX IDX_AC_CKID ON IDN_OAUTH2_AUTHORIZATION_CODE(CONSUMER_KEY_ID);\nCREATE INDEX IDX_AC_TID ON IDN_OAUTH2_AUTHORIZATION_CODE(TOKEN_ID);\nCREATE INDEX IDX_AC_AC_CKID ON IDN_OAUTH2_AUTHORIZATION_CODE(AUTHORIZATION_CODE, CONSUMER_KEY_ID);\n-- IDN_SCIM_GROUP --\nCREATE INDEX IDX_IDN_SCIM_GROUP_TI_RN ON IDN_SCIM_GROUP (TENANT_ID, ROLE_NAME);\nCREATE INDEX IDX_IDN_SCIM_GROUP_TI_RN_AN ON IDN_SCIM_GROUP (TENANT_ID, ROLE_NAME, ATTR_NAME(500));\n-- IDN_AUTH_SESSION_STORE --\nCREATE INDEX IDX_IDN_AUTH_SESSION_TIME ON IDN_AUTH_SESSION_STORE (TIME_CREATED);\n-- IDN_AUTH_TEMP_SESSION_STORE --\nCREATE INDEX IDX_IDN_AUTH_TMP_SESSION_TIME ON IDN_AUTH_TEMP_SESSION_STORE (TIME_CREATED);\n-- IDN_OIDC_SCOPE_CLAIM_MAPPING --\nCREATE INDEX IDX_AT_SI_ECI ON IDN_OIDC_SCOPE_CLAIM_MAPPING(SCOPE_ID, EXTERNAL_CLAIM_ID);\n-- IDN_OAUTH2_SCOPE --\nCREATE INDEX IDX_SC_TID ON IDN_OAUTH2_SCOPE(TENANT_ID);\nCREATE INDEX IDX_SC_N_TID ON IDN_OAUTH2_SCOPE(NAME, TENANT_ID);\n-- IDN_OAUTH2_SCOPE_BINDING --\nCREATE INDEX IDX_SB_SCPID ON IDN_OAUTH2_SCOPE_BINDING(SCOPE_ID);\n-- IDN_OIDC_REQ_OBJECT_REFERENCE --\nCREATE INDEX IDX_OROR_TID ON IDN_OIDC_REQ_OBJECT_REFERENCE(TOKEN_ID);\n-- IDN_OAUTH2_ACCESS_TOKEN_SCOPE --\nCREATE INDEX IDX_ATS_TID ON IDN_OAUTH2_ACCESS_TOKEN_SCOPE(TOKEN_ID);\n-- SP_TEMPLATE --\nCREATE INDEX IDX_SP_TEMPLATE ON SP_TEMPLATE (TENANT_ID, NAME);\n-- IDN_AUTH_USER --\nCREATE INDEX IDX_AUTH_USER_UN_TID_DN ON IDN_AUTH_USER (USER_NAME, TENANT_ID, DOMAIN_NAME);\nCREATE INDEX IDX_AUTH_USER_DN_TOD ON IDN_AUTH_USER (DOMAIN_NAME, TENANT_ID);\n-- IDN_AUTH_USER_SESSION_MAPPING --\nCREATE INDEX IDX_USER_ID ON IDN_AUTH_USER_SESSION_MAPPING (USER_ID);\nCREATE INDEX IDX_SESSION_ID ON IDN_AUTH_USER_SESSION_MAPPING (SESSION_ID);\n-- IDN_OAUTH_CONSUMER_APPS --\nCREATE INDEX IDX_OCA_UM_TID_UD_APN ON IDN_OAUTH_CONSUMER_APPS(USERNAME,TENANT_ID,USER_DOMAIN, APP_NAME);\n-- IDX_SPI_APP --\nCREATE INDEX IDX_SPI_APP ON SP_INBOUND_AUTH(APP_ID);\n-- IDN_OIDC_PROPERTY --\nCREATE INDEX IDX_IOP_TID_CK ON IDN_OIDC_PROPERTY(TENANT_ID,CONSUMER_KEY);\n-- IDN_FIDO2_PROPERTY --\nCREATE INDEX IDX_FIDO2_STR ON FIDO2_DEVICE_STORE(USER_NAME, TENANT_ID, DOMAIN_NAME, CREDENTIAL_ID, USER_HANDLE);\nUSE WSO2IS_BPS_DB\nDROP TABLE IF EXISTS ODE_SCHEMA_VERSION;\n--\n--\n--\nDROP TABLE IF EXISTS ODE_JOB;\nDROP TABLE IF EXISTS TASK_ATTACHMENT;\nDROP TABLE IF EXISTS ODE_ACTIVITY_RECOVERY;\nDROP TABLE IF EXISTS ODE_CORRELATION_SET;\nDROP TABLE IF EXISTS ODE_CORRELATOR;\nDROP TABLE IF EXISTS ODE_CORSET_PROP;\nDROP TABLE IF EXISTS ODE_EVENT;\nDROP TABLE IF EXISTS ODE_FAULT;\nDROP TABLE IF EXISTS ODE_MESSAGE;\nDROP TABLE IF EXISTS ODE_MESSAGE_EXCHANGE;\nDROP TABLE IF EXISTS ODE_MESSAGE_ROUTE;\nDROP TABLE IF EXISTS ODE_MEX_PROP;\nDROP TABLE IF EXISTS ODE_PARTNER_LINK;\nDROP TABLE IF EXISTS ODE_PROCESS;\nDROP TABLE IF EXISTS ODE_PROCESS_INSTANCE;\nDROP TABLE IF EXISTS ODE_SCOPE;\nDROP TABLE IF EXISTS ODE_XML_DATA;\nDROP TABLE IF EXISTS ODE_XML_DATA_PROP;\nDROP TABLE IF EXISTS OPENJPA_SEQUENCE_TABLE;\nDROP TABLE IF EXISTS STORE_DU;\nDROP TABLE IF EXISTS STORE_PROCESS;\nDROP TABLE IF EXISTS STORE_PROCESS_PROP;\nDROP TABLE IF EXISTS STORE_PROC_TO_PROP;\nDROP TABLE IF EXISTS STORE_VERSIONS;\n--\n-- Human Task Related SQL Scripts\n--\nDROP TABLE IF EXISTS HT_DEADLINE;\nDROP TABLE IF EXISTS HT_DEPLOYMENT_UNIT;\nDROP TABLE IF EXISTS HT_EVENT;\nDROP TABLE IF EXISTS HT_GENERIC_HUMAN_ROLE;\nDROP TABLE IF EXISTS HT_HUMANROLE_ORGENTITY;\nDROP TABLE IF EXISTS HT_JOB;\nDROP TABLE IF EXISTS HT_MESSAGE;\nDROP TABLE IF EXISTS HT_ORG_ENTITY;\nDROP TABLE IF EXISTS HT_PRESENTATION_ELEMENT;\nDROP TABLE IF EXISTS HT_PRESENTATION_PARAM;\nDROP TABLE IF EXISTS HT_TASK;\nDROP TABLE IF EXISTS HT_TASK_ATTACHMENT;\nDROP TABLE IF EXISTS HT_TASK_COMMENT;\nDROP TABLE IF EXISTS HT_VERSIONS;\n--\n-- Attachment Management Related SQL Scripts\n--\nDROP TABLE IF EXISTS ATTACHMENT;\n--\n-- B4P Related SQL Scripts\n--\nDROP TABLE IF EXISTS HT_COORDINATION_DATA;\n--\n-- BPEL Related SQL Scripts\n--\ncreate table ODE_SCHEMA_VERSION (VERSION integer);\ninsert into ODE_SCHEMA_VERSION values (6);\n-- Apache ODE - SimpleScheduler Database Schema\n--\n-- MySQL scripts by Maciej Szefler.\n--\n--\nDROP TABLE IF EXISTS ODE_JOB;\nCREATE TABLE ODE_JOB (\n  jobid CHAR(64)  NOT NULL DEFAULT '',\n  ts BIGINT  NOT NULL DEFAULT 0,\n  nodeid char(64)  NULL,\n  scheduled int  NOT NULL DEFAULT 0,\n  transacted int  NOT NULL DEFAULT 0,\n  instanceId BIGINT,\n  mexId varchar(255),\n  processId varchar(255),\n  type varchar(255),\n  channel varchar(255),\n  correlatorId varchar(255),\n  correlationKeySet varchar(255),\n  retryCount int,\n  inMem int,\n  detailsExt blob(4096),\n  PRIMARY KEY(jobid),\n  INDEX IDX_ODE_JOB_TS(ts),\n  INDEX IDX_ODE_JOB_NODEID(nodeid)\n)\nENGINE=innodb;\nCOMMIT;\nCREATE TABLE TASK_ATTACHMENT (ATTACHMENT_ID BIGINT NOT NULL, MESSAGE_EXCHANGE_ID VARCHAR(255), PRIMARY KEY (ATTACHMENT_ID)) ENGINE=innodb;\nCREATE TABLE ODE_ACTIVITY_RECOVERY (ID BIGINT NOT NULL, ACTIONS VARCHAR(255), ACTIVITY_ID BIGINT, CHANNEL VARCHAR(255), DATE_TIME DATETIME, DETAILS TEXT, INSTANCE_ID BIGINT, REASON VARCHAR(255), RETRIES INTEGER, PRIMARY KEY (ID)) ENGINE=innodb;\nCREATE TABLE ODE_CORRELATION_SET (CORRELATION_SET_ID BIGINT NOT NULL, CORRELATION_KEY VARCHAR(255), NAME VARCHAR(255), SCOPE_ID BIGINT, PRIMARY KEY (CORRELATION_SET_ID)) ENGINE=innodb;\nCREATE TABLE ODE_CORRELATOR (CORRELATOR_ID BIGINT NOT NULL, CORRELATOR_KEY VARCHAR(255), PROC_ID BIGINT, PRIMARY KEY (CORRELATOR_ID)) ENGINE=innodb;\nCREATE TABLE ODE_CORSET_PROP (ID BIGINT NOT NULL, CORRSET_ID BIGINT, PROP_KEY VARCHAR(255), PROP_VALUE VARCHAR(255), PRIMARY KEY (ID)) ENGINE=innodb;\nCREATE TABLE ODE_EVENT (EVENT_ID BIGINT NOT NULL, DETAIL VARCHAR(255), DATA BLOB, SCOPE_ID BIGINT, TSTAMP DATETIME, TYPE VARCHAR(255), INSTANCE_ID BIGINT, PROCESS_ID BIGINT, PRIMARY KEY (EVENT_ID)) ENGINE=innodb;\nCREATE TABLE ODE_FAULT (FAULT_ID BIGINT NOT NULL, ACTIVITY_ID INTEGER, DATA TEXT, MESSAGE VARCHAR(4000), LINE_NUMBER INTEGER, NAME VARCHAR(255), PRIMARY KEY (FAULT_ID)) ENGINE=innodb;\nCREATE TABLE ODE_MESSAGE (MESSAGE_ID BIGINT NOT NULL, DATA TEXT, HEADER TEXT, TYPE VARCHAR(255), MESSAGE_EXCHANGE_ID VARCHAR(255), PRIMARY KEY (MESSAGE_ID)) ENGINE=innodb;\nCREATE TABLE ODE_MESSAGE_EXCHANGE (MESSAGE_EXCHANGE_ID VARCHAR(255) NOT NULL, CALLEE VARCHAR(255), CHANNEL VARCHAR(255), CORRELATION_ID VARCHAR(255), CORRELATION_KEYS VARCHAR(255), CORRELATION_STATUS VARCHAR(255), CREATE_TIME DATETIME, DIRECTION INTEGER, EPR TEXT, FAULT VARCHAR(255), FAULT_EXPLANATION VARCHAR(255), OPERATION VARCHAR(255), PARTNER_LINK_MODEL_ID INTEGER, PATTERN VARCHAR(255), PIPED_ID VARCHAR(255), PORT_TYPE VARCHAR(255), PROPAGATE_TRANS BIT, STATUS VARCHAR(255), SUBSCRIBER_COUNT INTEGER, CORR_ID BIGINT, PARTNER_LINK_ID BIGINT, PROCESS_ID BIGINT, PROCESS_INSTANCE_ID BIGINT, REQUEST_MESSAGE_ID BIGINT, RESPONSE_MESSAGE_ID BIGINT, PRIMARY KEY (MESSAGE_EXCHANGE_ID)) ENGINE=innodb;\nCREATE TABLE ODE_MESSAGE_ROUTE (MESSAGE_ROUTE_ID BIGINT NOT NULL, CORRELATION_KEY VARCHAR(255), GROUP_ID VARCHAR(255), ROUTE_INDEX INTEGER, PROCESS_INSTANCE_ID INTEGER, ROUTE_POLICY VARCHAR(16), CORR_ID BIGINT, PRIMARY KEY (MESSAGE_ROUTE_ID)) ENGINE=innodb;\nCREATE TABLE ODE_MEX_PROP (ID BIGINT NOT NULL, MEX_ID VARCHAR(255), PROP_KEY VARCHAR(255), PROP_VALUE VARCHAR(2000), PRIMARY KEY (ID)) ENGINE=innodb;\nCREATE TABLE ODE_PARTNER_LINK (PARTNER_LINK_ID BIGINT NOT NULL, MY_EPR TEXT, MY_ROLE_NAME VARCHAR(255), MY_ROLE_SERVICE_NAME VARCHAR(255), MY_SESSION_ID VARCHAR(255), PARTNER_EPR TEXT, PARTNER_LINK_MODEL_ID INTEGER, PARTNER_LINK_NAME VARCHAR(255), PARTNER_ROLE_NAME VARCHAR(255), PARTNER_SESSION_ID VARCHAR(255), SCOPE_ID BIGINT, PRIMARY KEY (PARTNER_LINK_ID)) ENGINE=innodb;\nCREATE TABLE ODE_PROCESS (ID BIGINT NOT NULL, GUID VARCHAR(255), PROCESS_ID VARCHAR(255), PROCESS_TYPE VARCHAR(255), VERSION BIGINT, PRIMARY KEY (ID)) ENGINE=innodb;\nCREATE TABLE ODE_PROCESS_INSTANCE (ID BIGINT NOT NULL, DATE_CREATED DATETIME, EXECUTION_STATE BLOB, FAULT_ID BIGINT, LAST_ACTIVE_TIME DATETIME, LAST_RECOVERY_DATE DATETIME, PREVIOUS_STATE SMALLINT, SEQUENCE BIGINT, INSTANCE_STATE SMALLINT, INSTANTIATING_CORRELATOR_ID BIGINT, PROCESS_ID BIGINT, ROOT_SCOPE_ID BIGINT, PRIMARY KEY (ID)) ENGINE=innodb;\nCREATE TABLE ODE_SCOPE (SCOPE_ID BIGINT NOT NULL, MODEL_ID INTEGER, SCOPE_NAME VARCHAR(255), SCOPE_STATE VARCHAR(255), PROCESS_INSTANCE_ID BIGINT, PARENT_SCOPE_ID BIGINT, PRIMARY KEY (SCOPE_ID)) ENGINE=innodb;\nCREATE TABLE ODE_XML_DATA (XML_DATA_ID BIGINT NOT NULL, DATA TEXT, IS_SIMPLE_TYPE BIT, NAME VARCHAR(255), SCOPE_ID BIGINT, PRIMARY KEY (XML_DATA_ID)) ENGINE=innodb;\nCREATE TABLE ODE_XML_DATA_PROP (ID BIGINT NOT NULL, XML_DATA_ID BIGINT, PROP_KEY VARCHAR(255), PROP_VALUE VARCHAR(255), PRIMARY KEY (ID)) ENGINE=innodb;\nCREATE TABLE OPENJPA_SEQUENCE_TABLE (ID TINYINT NOT NULL, SEQUENCE_VALUE BIGINT, PRIMARY KEY (ID)) ENGINE=innodb;\nCREATE TABLE STORE_DU (NAME VARCHAR(255) NOT NULL, DEPLOYDT DATETIME, DEPLOYER VARCHAR(255), DIR VARCHAR(255), PRIMARY KEY (NAME)) ENGINE=innodb;\nCREATE TABLE STORE_PROCESS (PID VARCHAR(255) NOT NULL, STATE VARCHAR(255), TYPE VARCHAR(255), VERSION BIGINT, DU VARCHAR(255), PRIMARY KEY (PID)) ENGINE=innodb;\nCREATE TABLE STORE_PROCESS_PROP (id BIGINT NOT NULL, PROP_KEY VARCHAR(255), PROP_VAL VARCHAR(255), PRIMARY KEY (id)) ENGINE=innodb;\nCREATE TABLE STORE_PROC_TO_PROP (PROCESSCONFDAOIMPL_PID VARCHAR(255), ELEMENT_ID BIGINT) ENGINE=innodb;\nCREATE TABLE STORE_VERSIONS (id BIGINT NOT NULL, VERSION BIGINT, PRIMARY KEY (id)) ENGINE=innodb;\nCREATE INDEX I_D_TASK_ATTACMENT ON TASK_ATTACHMENT (MESSAGE_EXCHANGE_ID);\nCREATE INDEX I_D_CTVRY_INSTANCE ON ODE_ACTIVITY_RECOVERY (INSTANCE_ID);\nCREATE INDEX I_D_CR_ST_SCOPE ON ODE_CORRELATION_SET (SCOPE_ID);\nCREATE INDEX I_D_CRLTR_PROCESS ON ODE_CORRELATOR (PROC_ID);\nCREATE INDEX I_D_CRPRP_CORRSET ON ODE_CORSET_PROP (CORRSET_ID);\nCREATE INDEX I_OD_VENT_INSTANCE ON ODE_EVENT (INSTANCE_ID);\nCREATE INDEX I_OD_VENT_PROCESS ON ODE_EVENT (PROCESS_ID);\nCREATE INDEX I_OD_MSSG_MESSAGEEXCHANGE ON ODE_MESSAGE (MESSAGE_EXCHANGE_ID);\nCREATE INDEX I_D_MSHNG_CORRELATOR ON ODE_MESSAGE_EXCHANGE (CORR_ID);\nCREATE INDEX I_D_MSHNG_PARTNERLINK ON ODE_MESSAGE_EXCHANGE (PARTNER_LINK_ID);\nCREATE INDEX I_D_MSHNG_PROCESS ON ODE_MESSAGE_EXCHANGE (PROCESS_ID);\nCREATE INDEX I_D_MSHNG_PROCESSINST ON ODE_MESSAGE_EXCHANGE (PROCESS_INSTANCE_ID);\nCREATE INDEX I_D_MSHNG_REQUEST ON ODE_MESSAGE_EXCHANGE (REQUEST_MESSAGE_ID);\nCREATE INDEX I_D_MSHNG_RESPONSE ON ODE_MESSAGE_EXCHANGE (RESPONSE_MESSAGE_ID);\nCREATE INDEX I_D_MS_RT_CORRELATOR ON ODE_MESSAGE_ROUTE (CORR_ID);\nCREATE INDEX I_D_MS_RT_PROCESSINST ON ODE_MESSAGE_ROUTE (PROCESS_INSTANCE_ID);\nCREATE INDEX I_D_MXPRP_MEX ON ODE_MEX_PROP (MEX_ID);\nCREATE INDEX I_D_PRLNK_SCOPE ON ODE_PARTNER_LINK (SCOPE_ID);\nCREATE INDEX I_D_PRTNC_FAULT ON ODE_PROCESS_INSTANCE (FAULT_ID);\nCREATE INDEX I_D_PRTNC_INSTANTIATINGCORRELATOR ON ODE_PROCESS_INSTANCE (INSTANTIATING_CORRELATOR_ID);\nCREATE INDEX I_D_PRTNC_PROCESS ON ODE_PROCESS_INSTANCE (PROCESS_ID);\nCREATE INDEX I_D_PRTNC_ROOTSCOPE ON ODE_PROCESS_INSTANCE (ROOT_SCOPE_ID);\nCREATE INDEX I_OD_SCOP_PARENTSCOPE ON ODE_SCOPE (PARENT_SCOPE_ID);\nCREATE INDEX I_OD_SCOP_PROCESSINSTANCE ON ODE_SCOPE (PROCESS_INSTANCE_ID);\nCREATE INDEX I_D_XM_DT_SCOPE ON ODE_XML_DATA (SCOPE_ID);\nCREATE INDEX I_D_XMPRP_XMLDATA ON ODE_XML_DATA_PROP (XML_DATA_ID);\nCREATE INDEX I_STR_CSS_DU ON STORE_PROCESS (DU);\nCREATE INDEX I_STR_PRP_ELEMENT ON STORE_PROC_TO_PROP (ELEMENT_ID);\nCREATE INDEX I_STR_PRP_PROCESSCONFDAOIMPL_PID ON STORE_PROC_TO_PROP (PROCESSCONFDAOIMPL_PID);\n--\n-- Human Task Related SQL Scripts\n--\nCREATE TABLE HT_DEADLINE (id BIGINT NOT NULL, DEADLINE_DATE DATETIME NOT NULL, DEADLINE_NAME VARCHAR(255) NOT NULL, STATUS_TOBE_ACHIEVED VARCHAR(255) NOT NULL, TASK_ID BIGINT, PRIMARY KEY (id)) ENGINE = innodb;\nCREATE TABLE HT_DEPLOYMENT_UNIT (id BIGINT NOT NULL, CHECKSUM VARCHAR(255) NOT NULL, DEPLOYED_ON DATETIME, DEPLOY_DIR VARCHAR(255) NOT NULL, NAME VARCHAR(255) NOT NULL, PACKAGE_NAME VARCHAR(255) NOT NULL, STATUS VARCHAR(255) NOT NULL, TENANT_ID BIGINT NOT NULL, VERSION BIGINT NOT NULL, PRIMARY KEY (id)) ENGINE = innodb;\nCREATE TABLE HT_EVENT (id BIGINT NOT NULL, EVENT_DETAILS VARCHAR(255), NEW_STATE VARCHAR(255), OLD_STATE VARCHAR(255), EVENT_TIMESTAMP DATETIME NOT NULL, EVENT_TYPE VARCHAR(255) NOT NULL, EVENT_USER VARCHAR(255) NOT NULL, TASK_ID BIGINT, PRIMARY KEY (id)) ENGINE = innodb;\nCREATE TABLE HT_GENERIC_HUMAN_ROLE (GHR_ID BIGINT NOT NULL, GHR_TYPE VARCHAR(255), TASK_ID BIGINT, PRIMARY KEY (GHR_ID)) ENGINE = innodb;\nCREATE TABLE HT_HUMANROLE_ORGENTITY (HUMANROLE_ID BIGINT, ORGENTITY_ID BIGINT) ENGINE = innodb;\nCREATE TABLE HT_JOB (id BIGINT NOT NULL, JOB_DETAILS VARCHAR(4000), JOB_NAME VARCHAR(255), NODEID VARCHAR(255), SCHEDULED VARCHAR(1) NOT NULL, TASKID BIGINT NOT NULL, JOB_TIME BIGINT NOT NULL, TRANSACTED VARCHAR(1) NOT NULL, JOB_TYPE VARCHAR(255) NOT NULL, PRIMARY KEY (id)) ENGINE = innodb;\nCREATE TABLE HT_MESSAGE (MESSAGE_ID BIGINT NOT NULL, MESSAGE_DATA LONGTEXT, MESSAGE_HEADER LONGTEXT, MESSAGE_TYPE VARCHAR(255), MESSAGE_NAME VARCHAR(512), TASK_ID BIGINT, PRIMARY KEY (MESSAGE_ID)) ENGINE = innodb;\nCREATE TABLE HT_ORG_ENTITY (ORG_ENTITY_ID BIGINT NOT NULL, ORG_ENTITY_NAME VARCHAR(255), ORG_ENTITY_TYPE VARCHAR(255), PRIMARY KEY (ORG_ENTITY_ID)) ENGINE = innodb;\nCREATE TABLE HT_PRESENTATION_ELEMENT (id BIGINT NOT NULL, PE_CONTENT VARCHAR(2000), XML_LANG VARCHAR(255), PE_TYPE VARCHAR(31), CONTENT_TYPE VARCHAR(255), TASK_ID BIGINT, PRIMARY KEY (id)) ENGINE = innodb;\nCREATE TABLE HT_PRESENTATION_PARAM (id BIGINT NOT NULL, PARAM_NAME VARCHAR(255), PARAM_TYPE VARCHAR(255), PARAM_VALUE VARCHAR(2000), TASK_ID BIGINT, PRIMARY KEY (id)) ENGINE = innodb;\nCREATE TABLE HT_TASK (id BIGINT NOT NULL, ACTIVATION_TIME DATETIME, COMPLETE_BY_TIME DATETIME, CREATED_ON DATETIME, ESCALATED VARCHAR(1), EXPIRATION_TIME DATETIME, TASK_NAME VARCHAR(255) NOT NULL, PACKAGE_NAME VARCHAR(255) NOT NULL, PRIORITY INTEGER NOT NULL, SKIPABLE VARCHAR(1), START_BY_TIME DATETIME, STATUS VARCHAR(255) NOT NULL, STATUS_BEFORE_SUSPENSION VARCHAR(255), TASK_DEF_NAME VARCHAR(255) NOT NULL, TASK_VERSION BIGINT NOT NULL, TENANT_ID INTEGER NOT NULL, TASK_TYPE VARCHAR(255) NOT NULL, UPDATED_ON DATETIME, FAILURE_MESSAGE BIGINT, INPUT_MESSAGE BIGINT, OUTPUT_MESSAGE BIGINT, PARENTTASK_ID BIGINT, PRIMARY KEY (id)) ENGINE = innodb;\nCREATE TABLE HT_TASK_ATTACHMENT (id BIGINT NOT NULL, ACCESS_TYPE VARCHAR(255), ATTACHED_AT DATETIME, CONTENT_TYPE VARCHAR(255), ATTACHMENT_NAME VARCHAR(255), ATTACHMENT_VALUE VARCHAR(255), TASK_ID BIGINT, ATTACHED_BY BIGINT, PRIMARY KEY (id)) ENGINE = innodb;\nCREATE TABLE HT_TASK_COMMENT (id BIGINT NOT NULL, COMMENT_TEXT VARCHAR(4000), COMMENTED_BY VARCHAR(100), COMMENTED_ON DATETIME, MODIFIED_BY VARCHAR(100), MODIFIED_ON DATETIME, TASK_ID BIGINT, PRIMARY KEY (id)) ENGINE = innodb;\nCREATE TABLE HT_VERSIONS (id BIGINT NOT NULL, TASK_VERSION BIGINT NOT NULL, PRIMARY KEY (id)) ENGINE = innodb;\nCREATE INDEX I_HT_DDLN_TASK ON HT_DEADLINE (TASK_ID);\nCREATE INDEX I_HT_VENT_TASK ON HT_EVENT (TASK_ID);\nCREATE INDEX I_HT_G_RL_TASK ON HT_GENERIC_HUMAN_ROLE (TASK_ID);\nCREATE INDEX I_HT_HTTY_ELEMENT ON HT_HUMANROLE_ORGENTITY (ORGENTITY_ID);\nCREATE INDEX I_HT_HTTY_HUMANROLE_ID ON HT_HUMANROLE_ORGENTITY (HUMANROLE_ID);\nCREATE INDEX I_HT_MSSG_TASK ON HT_MESSAGE (TASK_ID);\nCREATE INDEX I_HT_PMNT_DTYPE ON HT_PRESENTATION_ELEMENT (PE_TYPE);\nCREATE INDEX I_HT_PMNT_TASK ON HT_PRESENTATION_ELEMENT (TASK_ID);\nCREATE INDEX I_HT_PPRM_TASK ON HT_PRESENTATION_PARAM (TASK_ID);\nCREATE INDEX I_HT_TASK_FAILUREMESSAGE ON HT_TASK (FAILURE_MESSAGE);\nCREATE INDEX I_HT_TASK_INPUTMESSAGE ON HT_TASK (INPUT_MESSAGE);\nCREATE INDEX I_HT_TASK_OUTPUTMESSAGE ON HT_TASK (OUTPUT_MESSAGE);\nCREATE INDEX I_HT_TASK_PARENTTASK ON HT_TASK (PARENTTASK_ID);\nCREATE INDEX I_HT_TMNT_ATTACHEDBY ON HT_TASK_ATTACHMENT (ATTACHED_BY);\nCREATE INDEX I_HT_TMNT_TASK ON HT_TASK_ATTACHMENT (TASK_ID);\nCREATE INDEX I_HT_TMNT_TASK1 ON HT_TASK_COMMENT (TASK_ID);\n--\n-- Attachment Management Related SQL Scripts\n--\nCREATE TABLE ATTACHMENT (\n\tid BIGINT NOT NULL AUTO_INCREMENT,\n\tCREATED_TIME TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n\tATTACHMENT_NAME VARCHAR(255) NOT NULL,\n\tCREATED_BY VARCHAR(255) NOT NULL,\n\tCONTENT_TYPE VARCHAR(255) NOT NULL,\n\tATTACHMENT_URL VARCHAR(2048) NOT NULL,\n\tATTACHMENT_CONTENT BLOB,\n\tPRIMARY KEY (id));\n-- CREATE INDEX I_ATTACHMENT_URL ON ATTACHMENT (ATTACHMENT_URL);\n--\n-- B4P Related SQL Scripts\n--\nCREATE TABLE HT_COORDINATION_DATA (MESSAGE_ID VARCHAR(255) NOT NULL, PROCESS_INSTANCE_ID VARCHAR(255), PROTOCOL_HANDlER_URL VARCHAR(255) NOT NULL, TASK_ID VARCHAR(255), PRIMARY KEY (MESSAGE_ID)) ENGINE = innodb;\nUSE WSO2IS_CONSENT_DB\nCREATE TABLE CM_PII_CATEGORY (\n  ID           INTEGER AUTO_INCREMENT,\n  NAME         VARCHAR(255) NOT NULL,\n  DESCRIPTION  VARCHAR(1023),\n  DISPLAY_NAME VARCHAR(255),\n  IS_SENSITIVE INTEGER      NOT NULL,\n  TENANT_ID    INTEGER DEFAULT '-1234',\n  UNIQUE KEY (NAME, TENANT_ID),\n  PRIMARY KEY (ID)\n);\nCREATE TABLE CM_RECEIPT (\n  CONSENT_RECEIPT_ID  VARCHAR(255) NOT NULL,\n  VERSION             VARCHAR(255) NOT NULL,\n  JURISDICTION        VARCHAR(255) NOT NULL,\n  CONSENT_TIMESTAMP   TIMESTAMP    NOT NULL,\n  COLLECTION_METHOD   VARCHAR(255) NOT NULL,\n  LANGUAGE            VARCHAR(255) NOT NULL,\n  PII_PRINCIPAL_ID    VARCHAR(255) NOT NULL,\n  PRINCIPAL_TENANT_ID INTEGER DEFAULT '-1234',\n  POLICY_URL          VARCHAR(255) NOT NULL,\n  STATE               VARCHAR(255) NOT NULL,\n  PII_CONTROLLER      VARCHAR(2048) NOT NULL,\n  PRIMARY KEY (CONSENT_RECEIPT_ID)\n);\nCREATE TABLE CM_PURPOSE (\n  ID            INTEGER AUTO_INCREMENT,\n  NAME          VARCHAR(255) NOT NULL,\n  DESCRIPTION   VARCHAR(1023),\n  PURPOSE_GROUP VARCHAR(255) NOT NULL,\n  GROUP_TYPE    VARCHAR(255) NOT NULL,\n  TENANT_ID     INTEGER DEFAULT '-1234',\n  UNIQUE KEY (NAME, TENANT_ID, PURPOSE_GROUP, GROUP_TYPE),\n  PRIMARY KEY (ID)\n);\nCREATE TABLE CM_PURPOSE_CATEGORY (\n  ID          INTEGER AUTO_INCREMENT,\n  NAME        VARCHAR(255) NOT NULL,\n  DESCRIPTION VARCHAR(1023),\n  TENANT_ID   INTEGER DEFAULT '-1234',\n  UNIQUE KEY (NAME, TENANT_ID),\n  PRIMARY KEY (ID)\n);\nCREATE TABLE CM_RECEIPT_SP_ASSOC (\n  ID                 INTEGER AUTO_INCREMENT,\n  CONSENT_RECEIPT_ID VARCHAR(255) NOT NULL,\n  SP_NAME            VARCHAR(255) NOT NULL,\n  SP_DISPLAY_NAME    VARCHAR(255),\n  SP_DESCRIPTION     VARCHAR(255),\n  SP_TENANT_ID       INTEGER DEFAULT '-1234',\n  UNIQUE KEY (CONSENT_RECEIPT_ID, SP_NAME, SP_TENANT_ID),\n  PRIMARY KEY (ID)\n);\nCREATE TABLE CM_SP_PURPOSE_ASSOC (\n  ID                     INTEGER AUTO_INCREMENT,\n  RECEIPT_SP_ASSOC       INTEGER      NOT NULL,\n  PURPOSE_ID             INTEGER      NOT NULL,\n  CONSENT_TYPE           VARCHAR(255) NOT NULL,\n  IS_PRIMARY_PURPOSE     INTEGER      NOT NULL,\n  TERMINATION            VARCHAR(255) NOT NULL,\n  THIRD_PARTY_DISCLOSURE INTEGER      NOT NULL,\n  THIRD_PARTY_NAME       VARCHAR(255),\n  UNIQUE KEY (RECEIPT_SP_ASSOC, PURPOSE_ID),\n  PRIMARY KEY (ID)\n);\nCREATE TABLE CM_SP_PURPOSE_PURPOSE_CAT_ASSC (\n  SP_PURPOSE_ASSOC_ID INTEGER NOT NULL,\n  PURPOSE_CATEGORY_ID INTEGER NOT NULL,\n  UNIQUE KEY (SP_PURPOSE_ASSOC_ID, PURPOSE_CATEGORY_ID)\n);\nCREATE TABLE CM_PURPOSE_PII_CAT_ASSOC (\n  PURPOSE_ID         INTEGER NOT NULL,\n  CM_PII_CATEGORY_ID INTEGER NOT NULL,\n  IS_MANDATORY       INTEGER NOT NULL,\n  UNIQUE KEY (PURPOSE_ID, CM_PII_CATEGORY_ID)\n);\nCREATE TABLE CM_SP_PURPOSE_PII_CAT_ASSOC (\n  SP_PURPOSE_ASSOC_ID INTEGER NOT NULL,\n  PII_CATEGORY_ID     INTEGER NOT NULL,\n  VALIDITY            VARCHAR(1023),\n  UNIQUE KEY (SP_PURPOSE_ASSOC_ID, PII_CATEGORY_ID)\n);\nCREATE TABLE CM_CONSENT_RECEIPT_PROPERTY (\n  CONSENT_RECEIPT_ID VARCHAR(255)  NOT NULL,\n  NAME               VARCHAR(255)  NOT NULL,\n  VALUE              VARCHAR(1023) NOT NULL,\n  UNIQUE KEY (CONSENT_RECEIPT_ID, NAME)\n);\nALTER TABLE CM_RECEIPT_SP_ASSOC\n  ADD CONSTRAINT CM_RECEIPT_SP_ASSOC_fk0 FOREIGN KEY (CONSENT_RECEIPT_ID) REFERENCES CM_RECEIPT (CONSENT_RECEIPT_ID);\nALTER TABLE CM_SP_PURPOSE_ASSOC\n  ADD CONSTRAINT CM_SP_PURPOSE_ASSOC_fk0 FOREIGN KEY (RECEIPT_SP_ASSOC) REFERENCES CM_RECEIPT_SP_ASSOC (ID);\nALTER TABLE CM_SP_PURPOSE_ASSOC\n  ADD CONSTRAINT CM_SP_PURPOSE_ASSOC_fk1 FOREIGN KEY (PURPOSE_ID) REFERENCES CM_PURPOSE (ID);\nALTER TABLE CM_SP_PURPOSE_PURPOSE_CAT_ASSC\n  ADD CONSTRAINT CM_SP_P_P_CAT_ASSOC_fk0 FOREIGN KEY (SP_PURPOSE_ASSOC_ID) REFERENCES CM_SP_PURPOSE_ASSOC (ID);\nALTER TABLE CM_SP_PURPOSE_PURPOSE_CAT_ASSC\n  ADD CONSTRAINT CM_SP_P_P_CAT_ASSOC_fk1 FOREIGN KEY (PURPOSE_CATEGORY_ID) REFERENCES CM_PURPOSE_CATEGORY (ID);\nALTER TABLE CM_SP_PURPOSE_PII_CAT_ASSOC\n  ADD CONSTRAINT CM_SP_P_PII_CAT_ASSOC_fk0 FOREIGN KEY (SP_PURPOSE_ASSOC_ID) REFERENCES CM_SP_PURPOSE_ASSOC (ID);\nALTER TABLE CM_SP_PURPOSE_PII_CAT_ASSOC\n  ADD CONSTRAINT CM_SP_P_PII_CAT_ASSOC_fk1 FOREIGN KEY (PII_CATEGORY_ID) REFERENCES CM_PII_CATEGORY (ID);\nALTER TABLE CM_CONSENT_RECEIPT_PROPERTY\n  ADD CONSTRAINT CM_CONSENT_RECEIPT_PRT_fk0 FOREIGN KEY (CONSENT_RECEIPT_ID) REFERENCES CM_RECEIPT (CONSENT_RECEIPT_ID);\nINSERT INTO CM_PURPOSE (NAME, DESCRIPTION, PURPOSE_GROUP, GROUP_TYPE, TENANT_ID) VALUES ('DEFAULT', 'For core functionalities of the product', 'DEFAULT', 'SP', '-1234');\nINSERT INTO CM_PURPOSE_CATEGORY (NAME, DESCRIPTION, TENANT_ID) VALUES ('DEFAULT','For core functionalities of the product', '-1234');"

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${NAME}-rdbms-service-mysql-test
  data:
    run.sh: |-
      @test "Testing MySQL Connection" {
        mysql --host=wso2is-rdbms-service-mysql --port=3306 -u root -proot
      }

- apiVersion: v1
  kind: Secret
  metadata:
    name: ${NAME}-rdbms-service-mysql
  type: Opaque
  data:
    mysql-password: d3NvMmNhcmJvbg==
    mysql-root-password: cm9vdA==

- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: ${NAME}-rdbms-service-mysql
  spec:
    replicas: 1
    selector:
      app: wso2is-rdbms-service-mysql
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          app: wso2is-rdbms-service-mysql
      spec:
        containers:
          - env:
              - name: MYSQL_ROOT_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: mysql-root-password
                    name: wso2is-rdbms-service-mysql
              - name: MYSQL_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: mysql-password
                    name: wso2is-rdbms-service-mysql
              - name: MYSQL_USER
                value: wso2carbon
              - name: MYSQL_DATABASE
            image: wso2is-rdbms-image-stream:latest
            livenessProbe:
              exec:
                command:
                  - sh
                  - '-c'
                  - 'mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}'
              initialDelaySeconds: 30
              periodSeconds: 10
            name: wso2is-rdbms-service-mysql
            ports:
              - containerPort: 3306
                name: mysql
                protocol: TCP
            readinessProbe:
              exec:
                command:
                  - sh
                  - '-c'
                  - 'mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}'
              initialDelaySeconds: 5
              periodSeconds: 10
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
              - mountPath: /var/lib/mysql
                name: data
              - mountPath: /etc/mysql/conf.d/mysql.cnf
                name: configurations
                subPath: mysql.cnf
              - mountPath: /docker-entrypoint-initdb.d
                name: migrations
        initContainers:
          - command:
              - rm
              - '-fr'
              - /var/lib/mysql/lost+found
            image: wso2is-init-image-stream:latest
            name: remove-lost-found
            resources:
              requests:
                cpu: 10m
                memory: 10Mi
            volumeMounts:
              - mountPath: /var/lib/mysql
                name: data
        volumes:
          - configMap:
              defaultMode: 420
              name: wso2is-rdbms-service-mysql-configuration
            name: configurations
          - configMap:
              defaultMode: 420
              name: wso2is-rdbms-service-mysql-initialization
            name: migrations
          - name: data
            persistentVolumeClaim:
              claimName: wso2is-rdbms-service-mysql
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
          - remove-lost-found
          from:
            kind: ImageStreamTag
            name: wso2is-init-image-stream:latest
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
          - wso2is-rdbms-service-mysql
          from:
            kind: ImageStreamTag
            name: wso2is-rdbms-image-stream:latest

- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: ${NAME}-ha-deployment
  spec:
    minReadySeconds: 30
    progressDeadlineSeconds: 600
    replicas: ${REPLICAS}
    selector:
      app: wso2is
      deployment: wso2is
      monitoring: jmx
    strategy:
      rollingParams:
        maxSurge: 1
        maxUnavailable: 0
      type: Rolling
    template:
      metadata:
        labels:
          app: wso2is
          deployment: wso2is
          monitoring: jmx
      spec:
        containers:
          - env:
              - name: NODE_IP
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: status.podIP
              - name: HOST_NAME
                value: wso2is
            image: '${WSO2_IS_IMAGE_NAME}'
            imagePullPolicy: Always
            lifecycle:
              preStop:
                exec:
                  command:
                    - sh
                    - '-c'
                    - '${WSO2_SERVER_HOME}/bin/wso2server.sh stop'
            livenessProbe:
              exec:
                command:
                  - /bin/sh
                  - '-c'
                  - nc -z localhost 9443
              initialDelaySeconds: 100
              periodSeconds: 10
            name: wso2is
            ports:
              - containerPort: 9763
                protocol: TCP
              - containerPort: 9443
                protocol: TCP
            readinessProbe:
              exec:
                command:
                  - /bin/sh
                  - '-c'
                  - nc -z localhost 9443
              initialDelaySeconds: 100
              periodSeconds: 10
            resources:
              limits:
                cpu: '${RESOURCES_LIMITS_CPU}'
                memory: ${RESOURCES_LIMITS_MEMORY}
              requests:
                cpu: '${RESOURCES_REQUEST_CPU}'
                memory: ${RESOURCES_REQUEST_MEMORY}
            volumeMounts:
              - name: wso2is-tenants
                mountPath: /home/wso2carbon/wso2is-5.9.0/repository/tenants
              - name: wso2is-userstore
                mountPath: /home/wso2carbon/wso2is-5.9.0/repository/deployment/server/userstores
              - name: identity-server-conf
                mountPath: /home/wso2carbon/wso2-config-volume/repository/conf/deployment.toml
                subPath: deployment.toml
        hostAliases:
          - hostnames:
              - wso2is
            ip: 127.0.0.1
        imagePullSecrets:
        - name: ${IMAGE_PULL_SECRET}
        initContainers:
          - command:
              - sh
              - '-c'
              - >-
                echo -e "Checking for the availability of MySQL Server
                deployment"; while ! nc -z wso2is-rdbms-service-mysql 3306; do
                sleep 1; printf "-"; done; echo -e "  >> MySQL Server has
                started";
            image: ' '
            imagePullPolicy: IfNotPresent
            name: init-is-db
        securityContext:
          runAsUser: 802
        serviceAccount: ${WSO2_IS_SERVICE_ACCOUNT_NAME}
        serviceAccountName: ${WSO2_IS_SERVICE_ACCOUNT_NAME}
        terminationGracePeriodSeconds: 30
        volumes:
          - name: wso2is-tenants
            persistentVolumeClaim:
              claimName: wso2is-tenants
          - name: wso2is-userstore
            persistentVolumeClaim:
              claimName: wso2is-userstore
          - configMap:
              defaultMode: 420
              name: identity-server-conf
            name: identity-server-conf
    triggers:
      - type: ConfigChange 
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
          - init-is-db
          from:
            kind: ImageStreamTag
            name: wso2is-init-image-stream:latest

- apiVersion: v1
  kind: Service
  metadata:
    name: ${NAME}-rdbms-service-mysql
  spec:
    selector:
      app: wso2is-rdbms-service-mysql
    type: ClusterIP
    ports:
      - name: mysql
        port: 3306
        protocol: TCP
        targetPort: mysql

- apiVersion: v1
  kind: Service
  metadata:
    name: ${NAME}-pattern-ha-service
  spec:
    selector:
      app: wso2is
      monitoring: jmx  
    type: ClusterIP
    ports:
      - name: servlet-http
        port: 9763
        protocol: TCP
        targetPort: 9763
      - name: servlet-https
        port: 9443
        protocol: TCP
        targetPort: 9443

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: ${NAME}-ha-router
  spec:
    port:
      targetPort: servlet-https
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: passthrough
    to:
      kind: Service
      name: wso2is-pattern-ha-service

parameters:
- name: OPENSHIFT_PROJECT_NAME
  displayName: Name of the OpenShift project
  required: true
  value: wso2

- name: NAME
  displayName: Name of the deployment
  required: true
  value: wso2is

- name: REPLICAS
  displayName: Number of replicas
  required: true
  value: '2'

- name: WSO2_IS_IMAGE_NAME
  displayName: WSO2 Identity Server image name
  required: true
  value: docker.wso2.com/wso2is:5.9.0

- name: IMAGE_PULL_SECRET
  displayName: WSO2 Subscription Credentials
  required: true
  value: wso2-image-pull-secret
  
- name: NFS_SERVER_IP
  displayName: NFS Server IP
  required: true
  value: ""

- name: NFS_SHARE_DATABASE
  displayName: NFS Share Path for database
  required: true
  value: ""

- name: NFS_SHARE_USERSTORE
  displayName: NFS Share Path for userstore
  required: true
  value: ""

- name: NFS_SHARE_TENANT
  displayName: NFS Share Path for tenant
  required: true
  value: ""

- name: RESOURCES_LIMITS_CPU
  displayName: Set a CPU resource limits
  required: true
  value: '4000m'

- name: RESOURCES_LIMITS_MEMORY
  displayName: Set a memory resource limits
  required: true
  value: '4Gi'

- name: RESOURCES_REQUEST_CPU
  displayName: Set a minimum CPU resource limits
  required: true
  value: '2000m'

- name: RESOURCES_REQUEST_MEMORY
  displayName: Set a minimum memory resource limits
  required: true
  value: '2Gi'

- name: WSO2_IS_SERVICE_ACCOUNT_NAME
  displayName: Service Name
  required: true
  value: wso2svc-account

